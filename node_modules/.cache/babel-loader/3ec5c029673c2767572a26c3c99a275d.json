{"ast":null,"code":"import _classCallCheck from \"C:/Users/Lenovo/FSWD/m-6/Ipod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Lenovo/FSWD/m-6/Ipod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Lenovo/FSWD/m-6/Ipod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Lenovo/FSWD/m-6/Ipod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\FSWD\\\\m-6\\\\Ipod\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Ipod from \"./components/stateless/Ipod\";\nimport ZingTouch from \"zingtouch\";\n\n// importing images from assets\nimport images from \"./assets/images/images\";\n\n// importing songs and thumbnails\nimport songs from \"./assets/songs/songs\";\n\n// Stateful App Class Component to Render the App as a whole\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n  var _super = _createSuper(App);\n  //-------------------------------------------------------------------------------------------\n  // Constructor for initialization of State and Ref\n  function App() {\n    var _this;\n    _classCallCheck(this, App);\n    _this = _super.call(this);\n    // State\n    // Functionality to choose the menu to display and handle the Menu Clicks\n    _this.isMenuVisible = function (menu, screen) {\n      var songsList = _this.state.songsList;\n      // To go back to the previous Menu from the current Display\n      if (menu.pageRender === \"yes\") {\n        menu.menuVisible = \"yes\";\n        screen.screenIndex = screen.wallpaperIndex;\n        menu.pageRender = \"no\";\n        songsList.songs.map(function (song) {\n          song.pause();\n          song.currentTime = 0;\n          return [];\n        });\n        songsList.isPlaying = false;\n      }\n      // To open the Menu and visit different Menu Options\n      else {\n        if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"no\") {\n          menu.menuVisible = \"no\";\n        } else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"yes\" && menu.settingsVisible === \"no\") {\n          menu.musicVisible = \"no\";\n        } else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"yes\") {\n          menu.settingsVisible = \"no\";\n        } else {\n          menu.menuVisible = \"yes\";\n        }\n      }\n      _this.setState({\n        menu: menu,\n        screen: screen,\n        songsList: songsList\n      });\n      return;\n    };\n    //-------------------------------------------------------------------------------------------\n    // Functionality to handle the Down Press CSS effect on Middle Button\n    _this.addClass = function (classname, event) {\n      if (classname === \"inner-circle\" && event === \"down\") {\n        var mouse = _this.state.mouse;\n        mouse.innerCircle = \"down\";\n        _this.setState({\n          mouse: mouse\n        });\n      }\n    };\n    //-------------------------------------------------------------------------------------------\n    // Functionality to handle the Up Press CSS effect on Middle Button\n    _this.removeClass = function (classname, event) {\n      if (classname === \"inner-circle\" && event === \"down\") {\n        var mouse = _this.state.mouse;\n        mouse.innerCircle = \"\";\n        _this.setState({\n          mouse: mouse\n        });\n      }\n    };\n    //-------------------------------------------------------------------------------------------\n    // Functionality to handle the Click Operations in the App for the Displays\n    _this.tap = function (menu, screen) {\n      var _this$state = _this.state,\n        songsList = _this$state.songsList,\n        theme = _this$state.theme;\n      // To go to the Sub Menu of the Main Menu\n      if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"no\") {\n        if (menu.optionsIndex === 0) {\n          menu.musicVisible = \"yes\";\n        } else if (menu.optionsIndex === 1) {\n          menu.pageRender = \"yes\";\n          menu.menuVisible = \"no\";\n          screen.screenIndex = 6;\n        } else if (menu.optionsIndex === 2) {\n          menu.pageRender = \"yes\";\n          menu.menuVisible = \"no\";\n          screen.screenIndex = 5;\n        } else {\n          menu.settingsVisible = \"yes\";\n        }\n      }\n      // To Open the Pages of Music Menu\n      else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"yes\" && menu.settingsVisible === \"no\") {\n        if (menu.musicIndex === 0) {\n          menu.pageRender = \"yes\";\n          menu.menuVisible = \"no\";\n          screen.screenIndex = 7;\n          songsList.isPlaying = true;\n          songsList.songs[songsList.songIndex].play();\n        } else if (menu.musicIndex === 1) {\n          menu.pageRender = \"yes\";\n          menu.menuVisible = \"no\";\n          screen.screenIndex = 8;\n        } else {\n          menu.pageRender = \"yes\";\n          menu.menuVisible = \"no\";\n          screen.screenIndex = 9;\n        }\n      }\n      // To Open the Pages of Settings Menu\n      else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"yes\") {\n        if (menu.settingsIndex === 0) {\n          if (screen.wallpaperIndex < 4) {\n            screen.wallpaperIndex += 1;\n          } else {\n            screen.wallpaperIndex = 0;\n          }\n          screen.screenIndex = screen.wallpaperIndex;\n        }\n        // For changing the Orientation\n        else if (menu.settingsIndex === 1) {\n          alert(\"Feature Will Be Added in the Next Version Release !! :)\");\n        }\n        // For changing the Theme\n        else {\n          if (theme.themeIndex === 0) {\n            theme.themeIndex = 1;\n          } else {\n            theme.themeIndex = 0;\n          }\n        }\n      } else {}\n      _this.setState({\n        menu: menu,\n        screen: screen,\n        songsList: songsList,\n        theme: theme\n      });\n      return;\n    };\n    //-------------------------------------------------------------------------------------------\n    // Functionality to handle the Rotation Operations in the App for the Options\n    _this.rotate = function (menu) {\n      // Binds the rotate event to the active region\n      _this.activeRegionOuter.bind(_this.containerElementOuter, \"rotate\", function (event) {\n        event.stopPropagation();\n        // Rotation in Main Menu\n        if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"no\") {\n          var angle = event.detail.angle;\n          if (angle >= 0 && angle <= 90) {\n            menu.optionsIndex = 0;\n          } else if (angle > 90 && angle <= 180) {\n            menu.optionsIndex = 1;\n          } else if (angle > 180 && angle <= 270) {\n            menu.optionsIndex = 2;\n          } else if (angle > 270 && angle <= 360) {\n            menu.optionsIndex = 3;\n          } else if (angle >= -90 && angle < 0) {\n            menu.optionsIndex = 3;\n          } else if (angle >= -180 && angle < -90) {\n            menu.optionsIndex = 2;\n          } else if (angle >= -270 && angle < -180) {\n            menu.optionsIndex = 1;\n          } else if (angle >= -360 && angle < -270) {\n            menu.optionsIndex = 0;\n          } else {}\n        }\n        // Rotation in Music Menu\n        else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"yes\" && menu.settingsVisible === \"no\") {\n          var _angle = event.detail.angle;\n          if (_angle >= 0 && _angle <= 120) {\n            menu.musicIndex = 0;\n          } else if (_angle > 120 && _angle <= 240) {\n            menu.musicIndex = 1;\n          } else if (_angle > 240 && _angle <= 360) {\n            menu.musicIndex = 2;\n          } else if (_angle >= -120 && _angle < 0) {\n            menu.musicIndex = 2;\n          } else if (_angle >= -240 && _angle < -120) {\n            menu.musicIndex = 1;\n          } else if (_angle >= -360 && _angle < -240) {\n            menu.musicIndex = 0;\n          } else {}\n        }\n        // Rotation in Settings Menu\n        else if (menu.menuVisible === \"yes\" && menu.musicVisible === \"no\" && menu.settingsVisible === \"yes\") {\n          var _angle2 = event.detail.angle;\n          if (_angle2 >= 0 && _angle2 <= 120) {\n            menu.settingsIndex = 0;\n          } else if (_angle2 > 120 && _angle2 <= 240) {\n            menu.settingsIndex = 1;\n          } else if (_angle2 > 240 && _angle2 <= 360) {\n            menu.settingsIndex = 2;\n          } else if (_angle2 >= -120 && _angle2 < 0) {\n            menu.settingsIndex = 2;\n          } else if (_angle2 >= -240 && _angle2 < -120) {\n            menu.settingsIndex = 1;\n          } else if (_angle2 >= -360 && _angle2 < -240) {\n            menu.settingsIndex = 0;\n          } else {}\n        } else {}\n        _this.setState({\n          menu: menu\n        });\n      });\n    };\n    //-------------------------------------------------------------------------------------------\n    // Gets called when we press the Play/Pause Button to Play-Pause the Song\n    _this.play = function (songsList) {\n      if (_this.state.menu.pageRender === \"yes\" && _this.state.screen.screenIndex === 7) {\n        var songIndex = songsList.songIndex;\n        if (songsList.isPlaying) {\n          songsList.isPlaying = false;\n          songsList.songs[songIndex].pause();\n        } else {\n          songsList.isPlaying = true;\n          songsList.songs[songIndex].play();\n        }\n        _this.setState({\n          songsList: songsList\n        });\n      } else {}\n    };\n    //-------------------------------------------------------------------------------------------\n    // Gets called when we Press the Next Button for the Next Song\n    _this.nextSong = function (songsList) {\n      if (_this.state.menu.pageRender === \"yes\" && _this.state.screen.screenIndex === 7) {\n        songsList.songs.map(function (song) {\n          song.pause();\n          song.currentTime = 0;\n          return [];\n        });\n        songsList.isPlaying = false;\n        songsList.songIndex += 1;\n        if (songsList.songIndex > songsList.songs.length - 1) {\n          songsList.songIndex = 0;\n        }\n        songsList.songs[songsList.songIndex].play();\n        songsList.isPlaying = true;\n        _this.setState({\n          songsList: songsList\n        });\n      } else {}\n    };\n    //-------------------------------------------------------------------------------------------\n    // Gets called when we Press the Previous Button for the Previous Song\n    _this.prevSong = function (songsList) {\n      if (_this.state.menu.pageRender === \"yes\" && _this.state.screen.screenIndex === 7) {\n        songsList.songs.map(function (song) {\n          song.pause();\n          song.currentTime = 0;\n          return [];\n        });\n        songsList.isPlaying = false;\n        songsList.songIndex -= 1;\n        if (songsList.songIndex < 0) {\n          songsList.songIndex = songsList.songs.length - 1;\n        }\n        songsList.songs[songsList.songIndex].play();\n        songsList.isPlaying = true;\n        _this.setState({\n          songsList: songsList\n        });\n      } else {}\n    };\n    //-------------------------------------------------------------------------------------------\n    // Gets called to Update the Song Progress Bar\n    _this.updateProgress = function (event) {\n      if (_this.state.menu.pageRender === \"yes\" && _this.state.screen.screenIndex === 7) {\n        var _event$srcElement = event.srcElement,\n          currentTime = _event$srcElement.currentTime,\n          duration = _event$srcElement.duration;\n        var progressPercent = currentTime / duration * 100;\n        _this.progressRef.current.style.width = progressPercent + \"%\";\n      } else {}\n    };\n    var song1 = new Audio(songs.music1);\n    var song2 = new Audio(songs.music2);\n    var song3 = new Audio(songs.music3);\n    _this.state = {\n      // State Managing the Menu\n      menu: {\n        // Menu Options along with their Sub-Menu Options\n        options: [{\n          music: [\"all-songs\", \"artists\", \"albums\"]\n        }, {\n          games: []\n        }, {\n          coverflow: []\n        }, {\n          settings: [\"change-wallpaper\", \"change-orientation\", \"change-theme\"]\n        }],\n        // Making the Menu Visible\n        menuVisible: \"no\",\n        musicVisible: \"no\",\n        settingsVisible: \"no\",\n        // Menu Options Index for traversal in Options and Sub Options\n        optionsIndex: 0,\n        musicIndex: 0,\n        settingsIndex: 0,\n        // used for Main Page Rendering like songs,artists,albums\n        pageRender: \"no\"\n      },\n      // State Managing the Screen Display\n      screen: {\n        // List of wallpapers, Pages in Background to Render\n        wallpaper: [\n        // wallpapers\n        images.wallpaper1, images.wallpaper2, images.wallpaper3, images.wallpaper4, images.wallpaper5,\n        // coverflow\n        images.coverflow,\n        // games\n        images.games,\n        // all songs\n        images.allsongs,\n        // artists\n        images.artists,\n        // albums\n        images.albums],\n        // Wallpaper index for traversal in Wallpaper Array to access wallpaper\n        wallpaperIndex: 0,\n        // Wallpaper index for traversal in Wallpaper Array for every Screen\n        screenIndex: 0\n      },\n      // State Managing the Mouse Click CSS Effect\n      mouse: {\n        innerCircle: \"\"\n      },\n      // State Managing the Songs\n      songsList: {\n        songs: [song1, song2, song3],\n        thumbnails: [images.song1Img, images.song2Img, images.song3Img],\n        songIndex: 0,\n        name: [\"Stay\", \"Deserve You\", \"Yummy\"],\n        isPlaying: false\n      },\n      // State Managing the Themes\n      theme: {\n        themeList: [\"Classic\", \"Dark\"],\n        themeIndex: 0\n      }\n    };\n    // Reference to access the Component\n    _this.controllerRef = /*#__PURE__*/React.createRef();\n    _this.progressRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value:\n    //-------------------------------------------------------------------------------------------\n    // Gets called before the First Re-Render and uses the Reference to the Controller\n    function componentDidMount() {\n      this.containerElementOuter = this.controllerRef.current;\n      this.activeRegionOuter = new ZingTouch.Region(this.containerElementOuter);\n    }\n  }, {\n    key: \"render\",\n    value:\n    //-------------------------------------------------------------------------------------------\n    // Renders the App Component\n    function render() {\n      //------------------------------------------------------------------------------------------\n      //Unpacking the State\n      var _this$state2 = this.state,\n        menu = _this$state2.menu,\n        screen = _this$state2.screen,\n        mouse = _this$state2.mouse,\n        songsList = _this$state2.songsList,\n        theme = _this$state2.theme;\n      //------------------------------------------------------------------------------------------\n      // Changing the Application Body Theme\n      var styling = function styling() {\n        if (theme.themeIndex === 0) {\n          return \"background-color: ''; transition: all 2s linear;\";\n        } else {\n          return \"background-color: black; transition: all 2s linear;\";\n        }\n      };\n      //------------------------------------------------------------------------------------------\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Ipod, {\n          screen: screen,\n          menu: menu,\n          mouse: mouse,\n          songsList: songsList,\n          theme: theme,\n          isMenuVisible: this.isMenuVisible,\n          addClass: this.addClass,\n          removeClass: this.removeClass,\n          tap: this.tap,\n          rotate: this.rotate,\n          play: this.play,\n          nextSong: this.nextSong,\n          prevSong: this.prevSong,\n          updateProgress: this.updateProgress,\n          controllerRef: this.controllerRef,\n          progressRef: this.progressRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }, this);\n      //------------------------------------------------------------------------------------------\n    }\n    //-------------------------------------------------------------------------------------------\n  }]);\n  return App;\n}(React.Component);\nexport default App;","map":{"version":3,"names":["React","Ipod","ZingTouch","images","songs","jsxDEV","_jsxDEV","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","isMenuVisible","menu","screen","songsList","state","pageRender","menuVisible","screenIndex","wallpaperIndex","map","song","pause","currentTime","isPlaying","musicVisible","settingsVisible","setState","addClass","classname","event","mouse","innerCircle","removeClass","tap","_this$state","theme","optionsIndex","musicIndex","songIndex","play","settingsIndex","alert","themeIndex","rotate","activeRegionOuter","bind","containerElementOuter","stopPropagation","angle","detail","nextSong","length","prevSong","updateProgress","_event$srcElement","srcElement","duration","progressPercent","progressRef","current","style","width","song1","Audio","music1","song2","music2","song3","music3","options","music","games","coverflow","settings","wallpaper","wallpaper1","wallpaper2","wallpaper3","wallpaper4","wallpaper5","allsongs","artists","albums","thumbnails","song1Img","song2Img","song3Img","name","themeList","controllerRef","createRef","_createClass","key","value","componentDidMount","Region","render","_this$state2","styling","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Component"],"sources":["C:/Users/Lenovo/FSWD/m-6/Ipod/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Ipod from \"./components/stateless/Ipod\";\nimport ZingTouch from \"zingtouch\";\n\n// importing images from assets\nimport images from \"./assets/images/images\";\n\n// importing songs and thumbnails\nimport songs from \"./assets/songs/songs\";\n\n// Stateful App Class Component to Render the App as a whole\nclass App extends React.Component {\n  //-------------------------------------------------------------------------------------------\n  // Constructor for initialization of State and Ref\n  constructor() {\n    super();\n    // State\n    const song1 = new Audio(songs.music1);\n    const song2 = new Audio(songs.music2);\n    const song3 = new Audio(songs.music3);\n    this.state = {\n      // State Managing the Menu\n      menu: {\n        // Menu Options along with their Sub-Menu Options\n        options: [\n          {\n            music: [\"all-songs\", \"artists\", \"albums\"]\n          },\n          {\n            games: []\n          },\n          {\n            coverflow: []\n          },\n          {\n            settings: [\"change-wallpaper\", \"change-orientation\", \"change-theme\"]\n          }\n        ],\n\n        // Making the Menu Visible\n        menuVisible: \"no\",\n        musicVisible: \"no\",\n        settingsVisible: \"no\",\n\n        // Menu Options Index for traversal in Options and Sub Options\n        optionsIndex: 0,\n        musicIndex: 0,\n        settingsIndex: 0,\n\n        // used for Main Page Rendering like songs,artists,albums\n        pageRender: \"no\"\n      },\n      \n      // State Managing the Screen Display\n      screen: {\n        // List of wallpapers, Pages in Background to Render\n        wallpaper: [\n          // wallpapers\n          images.wallpaper1,\n          images.wallpaper2,\n          images.wallpaper3,\n          images.wallpaper4,\n          images.wallpaper5,\n          // coverflow\n          images.coverflow,\n          // games\n          images.games,\n          // all songs\n          images.allsongs,\n          // artists\n          images.artists,\n          // albums\n          images.albums\n        ],\n        // Wallpaper index for traversal in Wallpaper Array to access wallpaper\n        wallpaperIndex: 0,\n        // Wallpaper index for traversal in Wallpaper Array for every Screen\n        screenIndex: 0\n      },\n      // State Managing the Mouse Click CSS Effect\n      mouse: {\n        innerCircle: \"\"\n      },\n      // State Managing the Songs\n      songsList: {\n        songs: [song1, song2, song3],\n        thumbnails: [images.song1Img, images.song2Img, images.song3Img],\n        songIndex: 0,\n        name: [\"Stay\", \"Deserve You\", \"Yummy\"],\n        isPlaying: false\n      },\n      // State Managing the Themes\n      theme: {\n        themeList: [\"Classic\", \"Dark\"],\n        themeIndex: 0\n      }\n    };\n    // Reference to access the Component\n    this.controllerRef = React.createRef();\n    this.progressRef = React.createRef();\n  }\n  \n  // Functionality to choose the menu to display and handle the Menu Clicks\n  isMenuVisible = (menu, screen) => {\n    const { songsList } = this.state;\n    // To go back to the previous Menu from the current Display\n    if (menu.pageRender === \"yes\") {\n      menu.menuVisible = \"yes\";\n      screen.screenIndex = screen.wallpaperIndex;\n      menu.pageRender = \"no\";\n\n      songsList.songs.map((song) => {\n        song.pause();\n        song.currentTime = 0;\n        return [];\n      });\n      songsList.isPlaying = false;\n    }\n    // To open the Menu and visit different Menu Options\n    else {\n      if (\n        menu.menuVisible === \"yes\" &&\n        menu.musicVisible === \"no\" &&\n        menu.settingsVisible === \"no\"\n      ) {\n        menu.menuVisible = \"no\";\n      } else if (\n        menu.menuVisible === \"yes\" &&\n        menu.musicVisible === \"yes\" &&\n        menu.settingsVisible === \"no\"\n      ) {\n        menu.musicVisible = \"no\";\n      } else if (\n        menu.menuVisible === \"yes\" &&\n        menu.musicVisible === \"no\" &&\n        menu.settingsVisible === \"yes\"\n      ) {\n        menu.settingsVisible = \"no\";\n      } else {\n        menu.menuVisible = \"yes\";\n      }\n    }\n    this.setState({ menu, screen, songsList });\n    return;\n  };\n  //-------------------------------------------------------------------------------------------\n  // Functionality to handle the Down Press CSS effect on Middle Button\n  addClass = (classname, event) => {\n    if (classname === \"inner-circle\" && event === \"down\") {\n      const { mouse } = this.state;\n      mouse.innerCircle = \"down\";\n      this.setState({ mouse });\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Functionality to handle the Up Press CSS effect on Middle Button\n  removeClass = (classname, event) => {\n    if (classname === \"inner-circle\" && event === \"down\") {\n      const { mouse } = this.state;\n      mouse.innerCircle = \"\";\n      this.setState({ mouse });\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Functionality to handle the Click Operations in the App for the Displays\n  tap = (menu, screen) => {\n    const { songsList, theme } = this.state;\n    // To go to the Sub Menu of the Main Menu\n    if (\n      menu.menuVisible === \"yes\" &&\n      menu.musicVisible === \"no\" &&\n      menu.settingsVisible === \"no\"\n    ) {\n      if (menu.optionsIndex === 0) {\n        menu.musicVisible = \"yes\";\n      } else if (menu.optionsIndex === 1) {\n        menu.pageRender = \"yes\";\n        menu.menuVisible = \"no\";\n        screen.screenIndex = 6;\n      } else if (menu.optionsIndex === 2) {\n        menu.pageRender = \"yes\";\n        menu.menuVisible = \"no\";\n        screen.screenIndex = 5;\n      } else {\n        menu.settingsVisible = \"yes\";\n      }\n    }\n    // To Open the Pages of Music Menu\n    else if (\n      menu.menuVisible === \"yes\" &&\n      menu.musicVisible === \"yes\" &&\n      menu.settingsVisible === \"no\"\n    ) {\n      if (menu.musicIndex === 0) {\n        menu.pageRender = \"yes\";\n        menu.menuVisible = \"no\";\n        screen.screenIndex = 7;\n        songsList.isPlaying = true;\n        songsList.songs[songsList.songIndex].play();\n      } else if (menu.musicIndex === 1) {\n        menu.pageRender = \"yes\";\n        menu.menuVisible = \"no\";\n        screen.screenIndex = 8;\n      } else {\n        menu.pageRender = \"yes\";\n        menu.menuVisible = \"no\";\n        screen.screenIndex = 9;\n      }\n    }\n    // To Open the Pages of Settings Menu\n    else if (\n      menu.menuVisible === \"yes\" &&\n      menu.musicVisible === \"no\" &&\n      menu.settingsVisible === \"yes\"\n    ) {\n      if (menu.settingsIndex === 0) {\n        if (screen.wallpaperIndex < 4) {\n          screen.wallpaperIndex += 1;\n        } else {\n          screen.wallpaperIndex = 0;\n        }\n        screen.screenIndex = screen.wallpaperIndex;\n      }\n      // For changing the Orientation\n      else if (menu.settingsIndex === 1) {\n        alert(\"Feature Will Be Added in the Next Version Release !! :)\");\n      }\n      // For changing the Theme\n      else {\n        if (theme.themeIndex === 0) {\n          theme.themeIndex = 1;\n        } else {\n          theme.themeIndex = 0;\n        }\n      }\n    } else {\n    }\n    this.setState({ menu, screen, songsList, theme });\n    return;\n  };\n  //-------------------------------------------------------------------------------------------\n  // Functionality to handle the Rotation Operations in the App for the Options\n  rotate = (menu) => {\n    // Binds the rotate event to the active region\n    this.activeRegionOuter.bind(\n      this.containerElementOuter,\n      \"rotate\",\n      (event) => {\n        event.stopPropagation();\n        // Rotation in Main Menu\n        if (\n          menu.menuVisible === \"yes\" &&\n          menu.musicVisible === \"no\" &&\n          menu.settingsVisible === \"no\"\n        ) {\n          const angle = event.detail.angle;\n          if (angle >= 0 && angle <= 90) {\n            menu.optionsIndex = 0;\n          } else if (angle > 90 && angle <= 180) {\n            menu.optionsIndex = 1;\n          } else if (angle > 180 && angle <= 270) {\n            menu.optionsIndex = 2;\n          } else if (angle > 270 && angle <= 360) {\n            menu.optionsIndex = 3;\n          } else if (angle >= -90 && angle < 0) {\n            menu.optionsIndex = 3;\n          } else if (angle >= -180 && angle < -90) {\n            menu.optionsIndex = 2;\n          } else if (angle >= -270 && angle < -180) {\n            menu.optionsIndex = 1;\n          } else if (angle >= -360 && angle < -270) {\n            menu.optionsIndex = 0;\n          } else {\n          }\n        }\n        // Rotation in Music Menu\n        else if (\n          menu.menuVisible === \"yes\" &&\n          menu.musicVisible === \"yes\" &&\n          menu.settingsVisible === \"no\"\n        ) {\n          const angle = event.detail.angle;\n          if (angle >= 0 && angle <= 120) {\n            menu.musicIndex = 0;\n          } else if (angle > 120 && angle <= 240) {\n            menu.musicIndex = 1;\n          } else if (angle > 240 && angle <= 360) {\n            menu.musicIndex = 2;\n          } else if (angle >= -120 && angle < 0) {\n            menu.musicIndex = 2;\n          } else if (angle >= -240 && angle < -120) {\n            menu.musicIndex = 1;\n          } else if (angle >= -360 && angle < -240) {\n            menu.musicIndex = 0;\n          } else {\n          }\n        }\n        // Rotation in Settings Menu\n        else if (\n          menu.menuVisible === \"yes\" &&\n          menu.musicVisible === \"no\" &&\n          menu.settingsVisible === \"yes\"\n        ) {\n          const angle = event.detail.angle;\n          if (angle >= 0 && angle <= 120) {\n            menu.settingsIndex = 0;\n          } else if (angle > 120 && angle <= 240) {\n            menu.settingsIndex = 1;\n          } else if (angle > 240 && angle <= 360) {\n            menu.settingsIndex = 2;\n          } else if (angle >= -120 && angle < 0) {\n            menu.settingsIndex = 2;\n          } else if (angle >= -240 && angle < -120) {\n            menu.settingsIndex = 1;\n          } else if (angle >= -360 && angle < -240) {\n            menu.settingsIndex = 0;\n          } else {\n          }\n        } else {\n        }\n        this.setState({ menu });\n      }\n    );\n  };\n  //-------------------------------------------------------------------------------------------\n  // Gets called before the First Re-Render and uses the Reference to the Controller\n  componentDidMount() {\n    this.containerElementOuter = this.controllerRef.current;\n    this.activeRegionOuter = new ZingTouch.Region(this.containerElementOuter);\n  }\n  //-------------------------------------------------------------------------------------------\n  // Gets called when we press the Play/Pause Button to Play-Pause the Song\n  play = (songsList) => {\n    if (\n      this.state.menu.pageRender === \"yes\" &&\n      this.state.screen.screenIndex === 7\n    ) {\n      const { songIndex } = songsList;\n      if (songsList.isPlaying) {\n        songsList.isPlaying = false;\n        songsList.songs[songIndex].pause();\n      } else {\n        songsList.isPlaying = true;\n        songsList.songs[songIndex].play();\n      }\n      this.setState({ songsList });\n    } else {\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Gets called when we Press the Next Button for the Next Song\n  nextSong = (songsList) => {\n    if (\n      this.state.menu.pageRender === \"yes\" &&\n      this.state.screen.screenIndex === 7\n    ) {\n      songsList.songs.map((song) => {\n        song.pause();\n        song.currentTime = 0;\n        return [];\n      });\n      songsList.isPlaying = false;\n      songsList.songIndex += 1;\n      if (songsList.songIndex > songsList.songs.length - 1) {\n        songsList.songIndex = 0;\n      }\n      songsList.songs[songsList.songIndex].play();\n      songsList.isPlaying = true;\n      this.setState({ songsList });\n    } else {\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Gets called when we Press the Previous Button for the Previous Song\n  prevSong = (songsList) => {\n    if (\n      this.state.menu.pageRender === \"yes\" &&\n      this.state.screen.screenIndex === 7\n    ) {\n      songsList.songs.map((song) => {\n        song.pause();\n        song.currentTime = 0;\n        return [];\n      });\n      songsList.isPlaying = false;\n      songsList.songIndex -= 1;\n      if (songsList.songIndex < 0) {\n        songsList.songIndex = songsList.songs.length - 1;\n      }\n      songsList.songs[songsList.songIndex].play();\n      songsList.isPlaying = true;\n      this.setState({ songsList });\n    } else {\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Gets called to Update the Song Progress Bar\n  updateProgress = (event) => {\n    if (\n      this.state.menu.pageRender === \"yes\" &&\n      this.state.screen.screenIndex === 7\n    ) {\n      const { currentTime, duration } = event.srcElement;\n      const progressPercent = (currentTime / duration) * 100;\n      this.progressRef.current.style.width = progressPercent + \"%\";\n    } else {\n    }\n  };\n  //-------------------------------------------------------------------------------------------\n  // Renders the App Component\n  render() {\n    //------------------------------------------------------------------------------------------\n    //Unpacking the State\n    const { menu, screen, mouse, songsList, theme } = this.state;\n    //------------------------------------------------------------------------------------------\n    // Changing the Application Body Theme\n    const styling = () => {\n      if (theme.themeIndex === 0) {\n        return \"background-color: ''; transition: all 2s linear;\";\n      } else {\n        return \"background-color: black; transition: all 2s linear;\";\n      }\n    };\n    //------------------------------------------------------------------------------------------\n    return (\n      <div className=\"App\">\n        <Ipod\n          screen={screen}\n          menu={menu}\n          mouse={mouse}\n          songsList={songsList}\n          theme={theme}\n          isMenuVisible={this.isMenuVisible}\n          addClass={this.addClass}\n          removeClass={this.removeClass}\n          tap={this.tap}\n          rotate={this.rotate}\n          play={this.play}\n          nextSong={this.nextSong}\n          prevSong={this.prevSong}\n          updateProgress={this.updateProgress}\n          controllerRef={this.controllerRef}\n          progressRef={this.progressRef}\n        />\n      </div>\n    );\n    //------------------------------------------------------------------------------------------\n  }\n  //-------------------------------------------------------------------------------------------\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}