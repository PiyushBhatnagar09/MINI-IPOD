{"ast":null,"code":"/*!\n * \n * ZingTouch v1.0.6\n * Author: ZingChart http://zingchart.com\n * License: MIT\n */\n!function (e) {\n  function t(r) {\n    if (n[r]) return n[r].exports;\n    var i = n[r] = {\n      exports: {},\n      id: r,\n      loaded: !1\n    };\n    return e[r].call(i.exports, i, i.exports, t), i.loaded = !0, i.exports;\n  }\n  var n = {};\n  return t.m = e, t.c = n, t.p = \"\", t(0);\n}([function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  var i = n(1),\n    u = r(i);\n  window.ZingTouch = u.default;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var i = n(2),\n    u = r(i),\n    o = n(4),\n    a = r(o),\n    s = n(10),\n    c = r(s),\n    f = n(12),\n    l = r(f),\n    d = n(13),\n    p = r(d),\n    h = n(14),\n    y = r(h),\n    v = n(15),\n    g = r(v),\n    m = n(16),\n    b = r(m),\n    w = {\n      _regions: [],\n      Gesture: a.default,\n      Expand: c.default,\n      Pan: l.default,\n      Pinch: p.default,\n      Rotate: y.default,\n      Swipe: g.default,\n      Tap: b.default,\n      Region: function Region(e, t, n) {\n        var r = w._regions.length,\n          i = new u.default(e, t, n, r);\n        return w._regions.push(i), i;\n      }\n    };\n  t.default = w;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    o = n(3),\n    a = r(o),\n    s = n(4),\n    c = r(s),\n    f = n(6),\n    l = r(f),\n    d = n(9),\n    p = r(d),\n    h = function () {\n      function e(t, n, r, u) {\n        var o = this;\n        i(this, e), this.id = u, this.element = t, this.capture = \"undefined\" != typeof n && n, this.preventDefault = \"undefined\" == typeof r || r, this.state = new p.default(u);\n        var a = [];\n        a = window.PointerEvent && !window.TouchEvent ? [\"pointerdown\", \"pointermove\", \"pointerup\"] : [\"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\"], a.map(function (e) {\n          t.addEventListener(e, function (e) {\n            (0, l.default)(e, o);\n          }, o.capture);\n        });\n      }\n      return u(e, [{\n        key: \"bind\",\n        value: function value(e, t, n, r, i) {\n          if (!e || e && !e.tagName) throw \"Bind must contain an element\";\n          return i = \"undefined\" != typeof i && i, t ? void this.state.addBinding(e, t, n, r, i) : new a.default(e, i, this.state);\n        }\n      }, {\n        key: \"bindOnce\",\n        value: function value(e, t, n, r) {\n          this.bind(e, t, n, r, !0);\n        }\n      }, {\n        key: \"unbind\",\n        value: function value(e, t) {\n          var n = this,\n            r = this.state.retrieveBindingsByElement(e),\n            i = [];\n          return r.forEach(function (r) {\n            if (t) {\n              if (\"string\" == typeof t && n.state.registeredGestures[t]) {\n                var u = n.state.registeredGestures[t];\n                u.id === r.gesture.id && (e.removeEventListener(r.gesture.getId(), r.handler, r.capture), i.push(r));\n              }\n            } else e.removeEventListener(r.gesture.getId(), r.handler, r.capture), i.push(r);\n          }), i;\n        }\n      }, {\n        key: \"register\",\n        value: function value(e, t) {\n          if (\"string\" != typeof e) throw new Error(\"Parameter key is an invalid string\");\n          if (!t instanceof c.default) throw new Error(\"Parameter gesture is an invalid Gesture object\");\n          t.setType(e), this.state.registerGesture(t, e);\n        }\n      }, {\n        key: \"unregister\",\n        value: function value(e) {\n          this.state.bindings.forEach(function (t) {\n            t.gesture.getType() === e && t.element.removeEventListener(t.gesture.getId(), t.handler, t.capture);\n          });\n          var t = this.state.registeredGestures[e];\n          return delete this.state.registeredGestures[e], t;\n        }\n      }]), e;\n    }();\n  t.default = h;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var r = function e(t, r, i) {\n    var u = this;\n    n(this, e), this.element = t, Object.keys(i.registeredGestures).forEach(function (e) {\n      u[e] = function (t, n) {\n        return i.addBinding(u.element, e, t, n, r), u;\n      };\n    });\n  };\n  t.default = r;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    o = n(5),\n    a = r(o),\n    s = function () {\n      function e() {\n        i(this, e), this.type = null, this.id = null;\n      }\n      return u(e, [{\n        key: \"setType\",\n        value: function value(e) {\n          this.type = e;\n        }\n      }, {\n        key: \"getType\",\n        value: function value() {\n          return this.type;\n        }\n      }, {\n        key: \"setId\",\n        value: function value(e) {\n          this.id = e;\n        }\n      }, {\n        key: \"getId\",\n        value: function value() {\n          return null !== this.id ? this.id : this.type;\n        }\n      }, {\n        key: \"update\",\n        value: function value(e) {\n          for (var t in e) this[t] && (this[t] = e[t]);\n        }\n      }, {\n        key: \"start\",\n        value: function value(e, t, n) {\n          return null;\n        }\n      }, {\n        key: \"move\",\n        value: function value(e, t, n) {\n          return null;\n        }\n      }, {\n        key: \"end\",\n        value: function value(e) {\n          return null;\n        }\n      }, {\n        key: \"isValid\",\n        value: function value(e, t, n) {\n          var r = !0;\n          return e.length > 1 && e.forEach(function (e) {\n            a.default.isInside(e.initial.x, e.initial.y, n) || (r = !1);\n          }), r;\n        }\n      }]), e;\n    }();\n  t.default = s;\n}, function (e, t) {\n  \"use strict\";\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var n = 360,\n    r = 180,\n    i = {\n      normalizeEvent: function normalizeEvent(e) {\n        switch (e) {\n          case \"mousedown\":\n          case \"touchstart\":\n          case \"pointerdown\":\n            return \"start\";\n          case \"mousemove\":\n          case \"touchmove\":\n          case \"pointermove\":\n            return \"move\";\n          case \"mouseup\":\n          case \"touchend\":\n          case \"pointerup\":\n            return \"end\";\n          default:\n            return null;\n        }\n      },\n      isWithin: function isWithin(e, t, n, r, i) {\n        return Math.abs(t - r) <= i && Math.abs(e - n) <= i;\n      },\n      distanceBetweenTwoPoints: function distanceBetweenTwoPoints(e, t, n, r) {\n        var i = Math.sqrt((t - e) * (t - e) + (r - n) * (r - n));\n        return Math.round(100 * i) / 100;\n      },\n      getMidpoint: function getMidpoint(e, t, n, r) {\n        return {\n          x: (e + t) / 2,\n          y: (n + r) / 2\n        };\n      },\n      getAngle: function getAngle(e, t, i, u) {\n        var o = Math.atan2(u - t, i - e) * (r / Math.PI);\n        return n - (o < 0 ? n + o : o);\n      },\n      getAngularDistance: function getAngularDistance(e, t) {\n        var i = (t - e) % n,\n          u = i < 0 ? 1 : -1;\n        return i = Math.abs(i), i > r ? u * (n - i) : u * i;\n      },\n      getVelocity: function getVelocity(e, t, n, r, i, u) {\n        var o = this.distanceBetweenTwoPoints(e, r, t, i);\n        return o / (u - n);\n      },\n      getRightMostInput: function getRightMostInput(e) {\n        var t = null,\n          n = Number.MIN_VALUE;\n        return e.forEach(function (e) {\n          e.initial.x > n && (t = e);\n        }), t;\n      },\n      isInteger: function isInteger(e) {\n        return \"number\" == typeof e && e % 1 === 0;\n      },\n      isInside: function isInside(e, t, n) {\n        var r = n.getBoundingClientRect();\n        return e > r.left && e < r.left + r.width && t > r.top && t < r.top + r.height;\n      },\n      getPropagationPath: function getPropagationPath(e) {\n        if (e.path) return e.path;\n        for (var t = [], n = e.target; n != document;) t.push(n), n = n.parentNode;\n        return t;\n      },\n      getPathIndex: function getPathIndex(e, t) {\n        var n = e.length;\n        return e.forEach(function (e, r) {\n          e === t && (n = r);\n        }), n;\n      },\n      setMSPreventDefault: function setMSPreventDefault(e) {\n        e.style[\"-ms-content-zooming\"] = \"none\", e.style[\"touch-action\"] = \"none\";\n      },\n      removeMSPreventDefault: function removeMSPreventDefault(e) {\n        e.style[\"-ms-content-zooming\"] = \"\", e.style[\"touch-action\"] = \"\";\n      }\n    };\n  t.default = i;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    var n = t.state;\n    if (0 !== n.inputs.length || \"start\" === f.default.normalizeEvent(e.type)) {\n      if (\"undefined\" != typeof e.buttons && \"end\" !== f.default.normalizeEvent(e.type) && 0 === e.buttons) return void n.resetInputs();\n      if (n.updateInputs(e, t.element)) {\n        var r = n.retrieveBindingsByInitialPos();\n        r.length > 0 && !function () {\n          t.preventDefault ? (f.default.setMSPreventDefault(t.element), e.preventDefault ? e.preventDefault() : e.returnValue = !1) : f.default.removeMSPreventDefault(t.element);\n          var i = {},\n            u = (0, s.default)(r, e, n);\n          u.forEach(function (t) {\n            var n = t.binding.gesture.id;\n            if (i[n]) {\n              var r = f.default.getPropagationPath(e);\n              f.default.getPathIndex(r, t.binding.element) < f.default.getPathIndex(r, i[n].binding.element) && (i[n] = t);\n            } else i[n] = t;\n          }), Object.keys(i).forEach(function (e) {\n            var t = i[e];\n            (0, o.default)(t.binding, t.data, t.events);\n          });\n        }();\n        var i = 0;\n        n.inputs.forEach(function (e) {\n          \"end\" === e.getCurrentEventType() && i++;\n        }), i === n.inputs.length && n.resetInputs();\n      }\n    }\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = n(7),\n    o = r(u),\n    a = n(8),\n    s = r(a),\n    c = n(5),\n    f = r(c);\n  t.default = i;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t, n) {\n    t.events = n;\n    var i = new CustomEvent(e.gesture.getId(), {\n      detail: t,\n      bubbles: !0,\n      cancelable: !0\n    });\n    r(e.element, i, e);\n  }\n  function r(e, t, n) {\n    e.dispatchEvent(t), n.bindOnce && ZingTouch.unbind(n.element, n.gesture.getType());\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  }), t.default = n;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t, n) {\n    var r = o.default.normalizeEvent(t.type),\n      i = [];\n    return e.forEach(function (e) {\n      var t = e.gesture[r](n.inputs, n, e.element);\n      t && !function () {\n        var r = [];\n        n.inputs.forEach(function (e) {\n          r.push(e.current);\n        }), i.push({\n          binding: e,\n          data: t,\n          events: r\n        });\n      }();\n    }), i;\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = n(5),\n    o = r(u);\n  t.default = i;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    for (var n = 0; n < e.length; n++) if (e[n].identifier === t) return e[n];\n    return null;\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    },\n    a = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    s = n(4),\n    c = r(s),\n    f = n(10),\n    l = r(f),\n    d = n(12),\n    p = r(d),\n    h = n(13),\n    y = r(h),\n    v = n(14),\n    g = r(v),\n    m = n(15),\n    b = r(m),\n    w = n(16),\n    _ = r(w),\n    P = n(17),\n    E = r(P),\n    O = n(18),\n    x = r(O),\n    j = n(5),\n    I = r(j),\n    T = 0,\n    k = function () {\n      function e(t) {\n        i(this, e), this.regionId = t, this.inputs = [], this.bindings = [], this.numGestures = 0, this.registeredGestures = {}, this.registerGesture(new l.default(), \"expand\"), this.registerGesture(new p.default(), \"pan\"), this.registerGesture(new g.default(), \"rotate\"), this.registerGesture(new y.default(), \"pinch\"), this.registerGesture(new b.default(), \"swipe\"), this.registerGesture(new _.default(), \"tap\");\n      }\n      return a(e, [{\n        key: \"addBinding\",\n        value: function value(e, t, n, r, i) {\n          var u = void 0;\n          if (e && \"undefined\" == typeof e.tagName) throw new Error(\"Parameter element is an invalid object.\");\n          if (\"function\" != typeof n) throw new Error(\"Parameter handler is invalid.\");\n          if (\"string\" == typeof t && Object.keys(this.registeredGestures).indexOf(t) === -1) throw new Error(\"Parameter \" + t + \" is not a registered gesture\");\n          if (\"object\" === (\"undefined\" == typeof t ? \"undefined\" : o(t)) && !(t instanceof c.default)) throw new Error(\"Parameter for the gesture is not of a Gesture type\");\n          \"string\" == typeof t ? u = this.registeredGestures[t] : (u = t, \"\" === u.id && this.assignGestureId(u)), this.bindings.push(new E.default(e, u, n, r, i)), e.addEventListener(u.getId(), n, r);\n        }\n      }, {\n        key: \"retrieveBindingsByElement\",\n        value: function value(e) {\n          var t = [];\n          return this.bindings.map(function (n) {\n            n.element === e && t.push(n);\n          }), t;\n        }\n      }, {\n        key: \"retrieveBindingsByInitialPos\",\n        value: function value() {\n          var e = this,\n            t = [];\n          return this.bindings.forEach(function (n) {\n            var r = e.inputs.filter(function (e) {\n              return I.default.isInside(e.initial.x, e.initial.y, n.element);\n            });\n            r.length > 0 && t.push(n);\n          }), t;\n        }\n      }, {\n        key: \"updateInputs\",\n        value: function value(e, t) {\n          function n(e, t, n, r) {\n            var i = I.default.normalizeEvent(e.type),\n              o = u(t.inputs, n);\n            return \"start\" === i && o ? void t.resetInputs() : \"start\" !== i && o && !I.default.isInside(o.current.x, o.current.y, r) ? void t.resetInputs() : \"start\" === i || o ? void (\"start\" === i ? t.inputs.push(new x.default(e, n)) : o.update(e, n)) : void t.resetInputs();\n          }\n          var r = T,\n            i = e.touches ? \"TouchEvent\" : e.pointerType ? \"PointerEvent\" : \"MouseEvent\";\n          switch (i) {\n            case \"TouchEvent\":\n              for (var o in e.changedTouches) e.changedTouches.hasOwnProperty(o) && I.default.isInteger(parseInt(o)) && (r = e.changedTouches[o].identifier, n(e, this, r, t));\n              break;\n            case \"PointerEvent\":\n              r = e.pointerId, n(e, this, r, t);\n              break;\n            case \"MouseEvent\":\n            default:\n              n(e, this, T, t);\n          }\n          return !0;\n        }\n      }, {\n        key: \"resetInputs\",\n        value: function value() {\n          this.inputs = [];\n        }\n      }, {\n        key: \"numActiveInputs\",\n        value: function value() {\n          var e = this.inputs.filter(function (e) {\n            return \"end\" !== e.current.type;\n          });\n          return e.length;\n        }\n      }, {\n        key: \"registerGesture\",\n        value: function value(e, t) {\n          this.assignGestureId(e), this.registeredGestures[t] = e;\n        }\n      }, {\n        key: \"assignGestureId\",\n        value: function value(e) {\n          e.setId(this.regionId + \"-\" + this.numGestures++);\n        }\n      }]), e;\n    }();\n  t.default = k;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = n(11),\n    s = r(a),\n    c = function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));\n        return n.type = \"expand\", n;\n      }\n      return o(t, e), t;\n    }(s.default);\n  t.default = c;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    s = n(4),\n    c = r(s),\n    f = n(5),\n    l = r(f),\n    d = 2,\n    p = 1,\n    h = function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n        return n.type = \"distance\", n.threshold = e && e.threshold ? e.threshold : p, n;\n      }\n      return o(t, e), a(t, [{\n        key: \"start\",\n        value: function value(e, t, n) {\n          if (!this.isValid(e, t, n)) return null;\n          if (e.length === d) {\n            var r = e[0].getGestureProgress(this.type);\n            r.lastEmittedDistance = l.default.distanceBetweenTwoPoints(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y);\n          }\n        }\n      }, {\n        key: \"move\",\n        value: function value(e, t, n) {\n          if (t.numActiveInputs() === d) {\n            var r = l.default.distanceBetweenTwoPoints(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y),\n              i = l.default.distanceBetweenTwoPoints(e[0].previous.x, e[1].previous.x, e[0].previous.y, e[1].previous.y),\n              u = l.default.getMidpoint(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y),\n              o = e[0].getGestureProgress(this.type);\n            if (\"Expand\" === this.constructor.name) {\n              if (r < i) o.lastEmittedDistance = r;else if (r - o.lastEmittedDistance >= this.threshold) return o.lastEmittedDistance = r, {\n                distance: r,\n                center: u\n              };\n            } else if (r > i) o.lastEmittedDistance = r;else if (r < i && o.lastEmittedDistance - r >= this.threshold) return o.lastEmittedDistance = r, {\n              distance: r,\n              center: u\n            };\n            return null;\n          }\n        }\n      }]), t;\n    }(c.default);\n  t.default = h;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    s = n(4),\n    c = r(s),\n    f = n(5),\n    l = r(f),\n    d = 1,\n    p = 1,\n    h = function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n        return n.type = \"pan\", n.numInputs = e && e.numInputs ? e.numInputs : d, n.threshold = e && e.threshold ? e.threshold : p, n;\n      }\n      return o(t, e), a(t, [{\n        key: \"start\",\n        value: function value(e) {\n          var t = this;\n          e.forEach(function (e) {\n            var n = e.getGestureProgress(t.getId());\n            n.active = !0, n.lastEmitted = {\n              x: e.current.x,\n              y: e.current.y\n            };\n          });\n        }\n      }, {\n        key: \"move\",\n        value: function value(e, t, n) {\n          if (this.numInputs === e.length) for (var r = {\n              data: []\n            }, i = 0; i < e.length; i++) {\n            var u = e[i].getGestureProgress(this.getId()),\n              o = !1,\n              a = Math.abs(e[i].current.y - u.lastEmitted.y) > this.threshold,\n              s = Math.abs(e[i].current.x - u.lastEmitted.x) > this.threshold;\n            if (o = a || s, !u.active || !o) return null;\n            r.data[i] = {\n              distanceFromOrigin: l.default.distanceBetweenTwoPoints(e[i].initial.x, e[i].current.x, e[i].initial.y, e[i].current.y),\n              directionFromOrigin: l.default.getAngle(e[i].initial.x, e[i].initial.y, e[i].current.x, e[i].current.y),\n              currentDirection: l.default.getAngle(u.lastEmitted.x, u.lastEmitted.y, e[i].current.x, e[i].current.y)\n            }, u.lastEmitted.x = e[i].current.x, u.lastEmitted.y = e[i].current.y;\n          }\n          return r;\n        }\n      }, {\n        key: \"end\",\n        value: function value(e) {\n          var t = this;\n          return e.forEach(function (e) {\n            var n = e.getGestureProgress(t.getId());\n            n.active = !1;\n          }), null;\n        }\n      }]), t;\n    }(c.default);\n  t.default = h;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = n(11),\n    s = r(a),\n    c = n(5),\n    f = (r(c), function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));\n        return n.type = \"pinch\", n;\n      }\n      return o(t, e), t;\n    }(s.default));\n  t.default = f;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    s = n(4),\n    c = r(s),\n    f = n(5),\n    l = r(f),\n    d = 2,\n    p = function (e) {\n      function t() {\n        i(this, t);\n        var e = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n        return e.type = \"rotate\", e;\n      }\n      return o(t, e), a(t, [{\n        key: \"move\",\n        value: function value(e, t, n) {\n          if (t.numActiveInputs() <= d) {\n            var r = void 0,\n              i = void 0,\n              u = void 0,\n              o = void 0;\n            if (1 === t.numActiveInputs()) {\n              var a = n.getBoundingClientRect();\n              r = {\n                x: a.left + a.width / 2,\n                y: a.top + a.height / 2\n              }, o = e[0], i = u = 0;\n            } else {\n              r = l.default.getMidpoint(e[0].initial.x, e[1].initial.x, e[0].initial.y, e[1].initial.y);\n              var s = l.default.getMidpoint(e[0].current.x, e[1].current.x, e[0].current.y, e[1].current.y);\n              i = r.x - s.x, u = r.y - s.y, o = l.default.getRightMostInput(e);\n            }\n            var c = l.default.getAngle(r.x, r.y, o.current.x + i, o.current.y + u),\n              f = o.getGestureProgress(this.getId());\n            return f.initialAngle ? (f.change = l.default.getAngularDistance(f.previousAngle, c), f.distance = f.distance + f.change) : (f.initialAngle = f.previousAngle = c, f.distance = f.change = 0), f.previousAngle = c, {\n              angle: c,\n              distanceFromOrigin: f.distance,\n              distanceFromLast: f.change\n            };\n          }\n          return null;\n        }\n      }]), t;\n    }(c.default);\n  t.default = p;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    s = n(4),\n    c = r(s),\n    f = n(5),\n    l = r(f),\n    d = 1,\n    p = 100,\n    h = .2,\n    y = 100,\n    v = 10,\n    g = function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n        return n.type = \"swipe\", n.numInputs = e && e.numInputs ? e.numInputs : d, n.maxRestTime = e && e.maxRestTime ? e.maxRestTime : p, n.escapeVelocity = e && e.escapeVelocity ? e.escapeVelocity : h, n.timeDistortion = e && e.timeDistortion ? e.timeDistortion : y, n.maxProgressStack = e && e.maxProgressStack ? e.maxProgressStack : v, n;\n      }\n      return o(t, e), a(t, [{\n        key: \"move\",\n        value: function value(e, t, n) {\n          if (this.numInputs === e.length) for (var r = 0; r < e.length; r++) {\n            var i = e[r].getGestureProgress(this.getId());\n            i.moves || (i.moves = []), i.moves.push({\n              time: new Date().getTime(),\n              x: e[r].current.x,\n              y: e[r].current.y\n            }), i.length > this.maxProgressStack && i.moves.shift();\n          }\n          return null;\n        }\n      }, {\n        key: \"end\",\n        value: function value(e) {\n          if (this.numInputs === e.length) {\n            for (var t = {\n                data: []\n              }, n = 0; n < e.length; n++) {\n              if (\"end\" !== e[n].current.type) return;\n              var r = e[n].getGestureProgress(this.getId());\n              if (r.moves && r.moves.length > 2) {\n                var i = r.moves.pop();\n                if (new Date().getTime() - i.time > this.maxRestTime) return null;\n                for (var u = void 0, o = r.moves.length - 1; o !== -1;) {\n                  if (r.moves[o].time !== i.time) {\n                    u = r.moves[o];\n                    break;\n                  }\n                  o--;\n                }\n                u || (u = r.moves.pop(), u.time += this.timeDistortion);\n                var a = l.default.getVelocity(u.x, u.y, u.time, i.x, i.y, i.time);\n                t.data[n] = {\n                  velocity: a,\n                  distance: l.default.distanceBetweenTwoPoints(u.x, i.x, u.y, i.y),\n                  duration: i.time - u.time,\n                  currentDirection: l.default.getAngle(u.x, u.y, i.x, i.y)\n                };\n              }\n            }\n            for (var n = 0; n < t.data.length; n++) if (a < this.escapeVelocity) return null;\n            if (t.data.length > 0) return t;\n          }\n          return null;\n        }\n      }]), t;\n    }(c.default);\n  t.default = g;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function u(e, t) {\n    if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n  }\n  function o(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n      return typeof e;\n    } : function (e) {\n      return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n    },\n    s = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    c = n(4),\n    f = r(c),\n    l = n(5),\n    d = r(l),\n    p = 0,\n    h = 300,\n    y = 1,\n    v = 10,\n    g = function (e) {\n      function t(e) {\n        i(this, t);\n        var n = u(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));\n        return n.type = \"tap\", n.minDelay = e && e.minDelay ? e.minDelay : p, n.maxDelay = e && e.maxDelay ? e.maxDelay : h, n.numInputs = e && e.numInputs ? e.numInputs : y, n.tolerance = e && e.tolerance ? e.tolerance : v, n;\n      }\n      return o(t, e), s(t, [{\n        key: \"start\",\n        value: function value(e) {\n          var t = this;\n          return e.length === this.numInputs && e.forEach(function (e) {\n            var n = e.getGestureProgress(t.type);\n            n.start = new Date().getTime();\n          }), null;\n        }\n      }, {\n        key: \"move\",\n        value: function value(e, t, n) {\n          for (var r = this, i = 0; i < e.length; i++) if (\"move\" === e[i].getCurrentEventType()) {\n            var u = e[i].current,\n              o = e[i].previous;\n            if (!d.default.isWithin(u.x, u.y, o.x, o.y, this.tolerance)) {\n              var s = function () {\n                var t = r.type;\n                return e.forEach(function (e) {\n                  e.resetProgress(t);\n                }), {\n                  v: null\n                };\n              }();\n              if (\"object\" === (\"undefined\" == typeof s ? \"undefined\" : a(s))) return s.v;\n            }\n          }\n          return null;\n        }\n      }, {\n        key: \"end\",\n        value: function value(e) {\n          var t = this;\n          if (e.length !== this.numInputs) return null;\n          for (var n = Number.MAX_VALUE, r = 0; r < e.length; r++) {\n            if (\"end\" !== e[r].getCurrentEventType()) return null;\n            var i = e[r].getGestureProgress(this.type);\n            if (!i.start) return null;\n            i.start < n && (n = i.start);\n          }\n          var u = new Date().getTime() - n;\n          if (this.minDelay <= u && this.maxDelay >= u) return {\n            interval: u\n          };\n          var o = function () {\n            var n = t.type;\n            return e.forEach(function (e) {\n              e.resetProgress(n);\n            }), {\n              v: null\n            };\n          }();\n          return \"object\" === (\"undefined\" == typeof o ? \"undefined\" : a(o)) ? o.v : void 0;\n        }\n      }]), t;\n    }(f.default);\n  t.default = g;\n}, function (e, t) {\n  \"use strict\";\n\n  function n(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var r = function e(t, r, i, u, o) {\n    n(this, e), this.element = t, this.gesture = r, this.handler = i, this.capture = \"undefined\" != typeof u && u, this.bindOnce = \"undefined\" != typeof o && o;\n  };\n  t.default = r;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = function () {\n      function e(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n      return function (t, n, r) {\n        return n && e(t.prototype, n), r && e(t, r), t;\n      };\n    }(),\n    o = n(19),\n    a = r(o),\n    s = function () {\n      function e(t, n) {\n        i(this, e);\n        var r = new a.default(t, n);\n        this.initial = r, this.current = r, this.previous = r, this.identifier = \"undefined\" != typeof n ? n : 0, this.progress = {};\n      }\n      return u(e, [{\n        key: \"update\",\n        value: function value(e, t) {\n          this.previous = this.current, this.current = new a.default(e, t);\n        }\n      }, {\n        key: \"getGestureProgress\",\n        value: function value(e) {\n          return this.progress[e] || (this.progress[e] = {}), this.progress[e];\n        }\n      }, {\n        key: \"getCurrentEventType\",\n        value: function value() {\n          return this.current.type;\n        }\n      }, {\n        key: \"resetProgress\",\n        value: function value(e) {\n          this.progress[e] = {};\n        }\n      }]), e;\n    }();\n  t.default = s;\n}, function (e, t, n) {\n  \"use strict\";\n\n  function r(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function i(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  });\n  var u = n(5),\n    o = r(u),\n    a = 0,\n    s = function e(t, n) {\n      i(this, e), this.originalEvent = t, this.type = o.default.normalizeEvent(t.type), this.x = a, this.y = a;\n      var r = void 0;\n      if (t.touches && t.changedTouches) {\n        for (var u = 0; u < t.changedTouches.length; u++) if (t.changedTouches[u].identifier === n) {\n          r = t.changedTouches[u];\n          break;\n        }\n      } else r = t;\n      this.x = this.clientX = r.clientX, this.y = this.clientY = r.clientY, this.pageX = r.pageX, this.pageY = r.pageY, this.screenX = r.screenX, this.screenY = r.screenY;\n    };\n  t.default = s;\n}]);","map":{"version":3,"sources":["webpack:///dist/zingtouch.min.js","webpack:/webpack/bootstrap ba963050fa137fcec55a","webpack:///src/core/main.js","webpack:///src/ZingTouch.js","webpack:///src/core/classes/Region.js","webpack:///src/core/classes/Binder.js","webpack:///src/gestures/Gesture.js","webpack:///src/core/util.js","webpack:///src/core/arbiter.js","webpack:///src/core/dispatcher.js","webpack:///src/core/interpreter.js","webpack:///src/core/classes/State.js","webpack:///src/gestures/Expand.js","webpack:///src/gestures/Distance.js","webpack:///src/gestures/Pan.js","webpack:///src/gestures/Pinch.js","webpack:///src/gestures/Rotate.js","webpack:///src/gestures/Swipe.js","webpack:///src/gestures/Tap.js","webpack:///src/core/classes/Binding.js","webpack:///src/core/classes/Input.js","webpack:///src/core/classes/ZingEvent.js"],"names":["modules","module","exports","__webpack_require__","_ZingTouch2","_interopRequireDefault","_ZingTouch","obj","__esModule","default","Object","defineProperty","value","_Region3","_Region2","_Gesture2","_Gesture","_Expand2","_Expand","_Pan2","_Pan","_Pinch2","_Pinch","_Rotate2","_Rotate","_Swipe2","_Swipe","_Tap2","_Tap","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Binder2","_Binder","_arbiter2","_arbiter","_State2","_State","_classCallCheck","instance","TypeError","Region","_util2","_util","Gesture","_dispatcher2","_dispatcher","_interpreter2","_interpreter","_typeof","Symbol","iterator","constructor","_Binding2","_Binding","_Input2","_Input","State","_Distance3","_Distance2","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_Distance","Expand","_Gesture3","Distance","Pan","Pinch","Rotate","Swipe","Tap","_ZingEvent2","_ZingEvent","Input","id","loaded","window","ZingTouch","_regions","element","capture","preventDefault","region","push","this","state","eventNames","PointerEvent","TouchEvent","map","name","addEventListener","e","_this","gesture","handler","bindOnce","tagName","addBinding","bind","bindings","retrieveBindingsByElement","unbound","forEach","binding","_this2","registeredGestures","registeredGesture","removeEventListener","getId","Error","setType","registerGesture","getType","Binder","keys","type","object","inputs","valid","input","isInside","initial","x","y","CIRCLE_DEGREES","HALF_CIRCLE_DEGREES","util","normalizeEvent","isWithin","currentX","currentY","previousX","previousY","tolerance","Math","abs","distanceBetweenTwoPoints","x0","x1","y0","y1","dist","sqrt","round","getMidpoint","getAngle","originX","originY","projectionX","projectionY","angle","atan2","PI","getAngularDistance","start","end","sign","getVelocity","startX","startY","startTime","endX","endY","endTime","distance","getRightMostInput","rightMost","Number","MIN_VALUE","isInteger","rect","getBoundingClientRect","left","width","top","height","getPropagationPath","event","path","node","document","parentNode","getPathIndex","index","setMSPreventDefault","style","removeMSPreventDefault","arbiter","buttons","resetInputs","updateInputs","retrieveBindingsByInitialPos","returnValue","toBeDispatched","gestures","data","events","endCount","getCurrentEventType","dispatcher","newEvent","CustomEvent","detail","bubbles","cancelable","emitEvent","dispatchEvent","unbind","interpreter","evType","candidates","result","current","DEFAULT_MOUSE_ID","regionId","numGestures","boundGesture","indexOf","assignGestureId","matches","inputsInside","filter","regionElement","identifier","eventType","touches","pointerType","changedTouches","hasOwnProperty","parseInt","update","pointerId","findInputById","endType","setId","options","DEFAULT_INPUTS","DEFAULT_MIN_THRESHOLD","threshold","isValid","progress","getGestureProgress","lastEmittedDistance","numActiveInputs","currentDistance","lastDistance","previous","centerPoint","center","numInputs","active","lastEmitted","output","reachedThreshold","yThreshold","xThreshold","distanceFromOrigin","directionFromOrigin","currentDirection","_this3","MAX_INPUTS","referencePivot","diffX","diffY","bRect","currentPivot","currentAngle","initialAngle","previousAngle","change","distanceFromLast","DEFAULT_MAX_REST_TIME","DEFAULT_ESCAPE_VELOCITY","DEFAULT_TIME_DISTORTION","DEFAULT_MAX_PROGRESS_STACK","maxRestTime","escapeVelocity","timeDistortion","maxProgressStack","moves","time","Date","getTime","shift","currentMove","pop","lastMove","velocity","duration","DEFAULT_MIN_DELAY_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_MOVE_PX_TOLERANCE","minDelay","maxDelay","resetProgress","MAX_VALUE","interval","_this4","Binding","currentEvent","touchIdentifier","INITIAL_COORDINATE","ZingEvent","originalEvent","eventObj","clientX","clientY","pageX","pageY","screenX","screenY"],"mappings":"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","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ZingTouch = __webpack_require__(1);\n\t\n\tvar _ZingTouch2 = _interopRequireDefault(_ZingTouch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.ZingTouch = _ZingTouch2.default; /**\n\t                                         * @file main.js\n\t                                         * Main file to setup event listeners on the document,\n\t                                         * and to expose the ZingTouch object\n\t                                         */\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Region2 = __webpack_require__(2);\n\t\n\tvar _Region3 = _interopRequireDefault(_Region2);\n\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _Expand = __webpack_require__(10);\n\t\n\tvar _Expand2 = _interopRequireDefault(_Expand);\n\t\n\tvar _Pan = __webpack_require__(12);\n\t\n\tvar _Pan2 = _interopRequireDefault(_Pan);\n\t\n\tvar _Pinch = __webpack_require__(13);\n\t\n\tvar _Pinch2 = _interopRequireDefault(_Pinch);\n\t\n\tvar _Rotate = __webpack_require__(14);\n\t\n\tvar _Rotate2 = _interopRequireDefault(_Rotate);\n\t\n\tvar _Swipe = __webpack_require__(15);\n\t\n\tvar _Swipe2 = _interopRequireDefault(_Swipe);\n\t\n\tvar _Tap = __webpack_require__(16);\n\t\n\tvar _Tap2 = _interopRequireDefault(_Tap);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * The global API interface for ZingTouch. Contains a constructor for the\n\t * Region Object, and constructors for each predefined Gesture.\n\t * @type {Object}\n\t * @namespace ZingTouch\n\t */\n\t/**\n\t * @file ZingTouch.js\n\t * Main object containing API methods and Gesture constructors\n\t */\n\t\n\tvar ZingTouch = {\n\t  _regions: [],\n\t\n\t  // Constructors\n\t  Gesture: _Gesture2.default,\n\t  Expand: _Expand2.default,\n\t  Pan: _Pan2.default,\n\t  Pinch: _Pinch2.default,\n\t  Rotate: _Rotate2.default,\n\t  Swipe: _Swipe2.default,\n\t  Tap: _Tap2.default,\n\t  Region: function Region(element, capture, preventDefault) {\n\t    var id = ZingTouch._regions.length;\n\t    var region = new _Region3.default(element, capture, preventDefault, id);\n\t    ZingTouch._regions.push(region);\n\t    return region;\n\t  }\n\t};\n\t\n\texports.default = ZingTouch;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile Region.js\n\tn\t\n\tvar _Binder = __webpack_require__(3);\n\t\n\tvar _Binder2 = _interopRequireDefault(_Binder);\n\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _arbiter = __webpack_require__(6);\n\t\n\tvar _arbiter2 = _interopRequireDefault(_arbiter);\n\t\n\tvar _State = __webpack_require__(9);\n\t\n\tvar _State2 = _interopRequireDefault(_State);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Allows the user to specify a region to capture all events to feed ZingTouch\n\t * into. This can be as narrow as the element itself, or as big as the document\n\t * itself. The more specific an area, the better performant the overall\n\t * application will perform. Contains API methods to bind/unbind specific\n\t * elements to corresponding gestures. Also contains the ability to\n\t * register/unregister new gestures.\n\t * @class Region\n\t */\n\tvar Region = function () {\n\t\n\t  /**\n\t   * Constructor function for the Region class.\n\t   * @param {Element} element - The element to capture all\n\t   *  window events in that region to feed into ZingTouch.\n\t   * @param {boolean} [capture=false] - Whether the region listens for\n\t   *  captures or bubbles.\n\t   * @param {boolean} [preventDefault=true] - Whether the default browser\n\t   *  functionality should be disabled;\n\t   * @param {Number} id - The id of the region, assigned by the ZingTouch object\n\t   */\n\t  function Region(element, capture, preventDefault, id) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Region);\n\t\n\t    /**\n\t     * The identifier for the Region. This is assigned by the ZingTouch object\n\t     * and is used to hash gesture id for uniqueness.\n\t     * @type {Number}\n\t     */\n\t    this.id = id;\n\t\n\t    /**\n\t     * The element being bound to.\n\t     * @type {Element}\n\t     */\n\t    this.element = element;\n\t\n\t    /**\n\t     * Whether the region listens for captures or bubbles.\n\t     * @type {boolean}\n\t     */\n\t    this.capture = typeof capture !== 'undefined' ? capture : false;\n\t\n\t    /**\n\t     * Boolean to disable browser functionality such as scrolling and zooming\n\t     * over the region\n\t     * @type {boolean}\n\t     */\n\t    this.preventDefault = typeof preventDefault !== 'undefined' ? preventDefault : true;\n\t\n\t    /**\n\t     * The internal state object for a Region.\n\t     * Keeps track of registered gestures, inputs, and events.\n\t     * @type {State}\n\t     */\n\t    this.state = new _State2.default(id);\n\t\n\t    var eventNames = [];\n\t    if (window.PointerEvent && !window.TouchEvent) {\n\t      eventNames = ['pointerdown', 'pointermove', 'pointerup'];\n\t    } else {\n\t      eventNames = ['mousedown', 'mousemove', 'mouseup', 'touchstart', 'touchmove', 'touchend'];\n\t    }\n\t\n\t    // Bind detected browser events to the region element.\n\t    eventNames.map(function (name) {\n\t      element.addEventListener(name, function (e) {\n\t        (0, _arbiter2.default)(e, _this);\n\t      }, _this.capture);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Bind an element to a registered/unregistered gesture with\n\t   * multiple function signatures.\n\t   * @example\n\t   * bind(element) - chainable\n\t   * @example\n\t   * bind(element, gesture, handler, [capture])\n\t   * @param {Element} element - The element object.\n\t   * @param {String|Object} [gesture] - Gesture key, or a Gesture object.\n\t   * @param {Function} [handler] - The function to execute when an event is\n\t   *  emitted.\n\t   * @param {Boolean} [capture] - capture/bubble\n\t   * @param {Boolean} [bindOnce = false] - Option to bind once and\n\t   *  only emit the event once.\n\t   * @return {Object} - a chainable object that has the same function as bind.\n\t   */\n\t\n\t\n\t  _createClass(Region, [{\n\t    key: 'bind',\n\t    value: function bind(element, gesture, handler, capture, bindOnce) {\n\t      if (!element || element && !element.tagName) {\n\t        throw 'Bind must contain an element';\n\t      }\n\t\n\t      bindOnce = typeof bindOnce !== 'undefined' ? bindOnce : false;\n\t      if (!gesture) {\n\t        return new _Binder2.default(element, bindOnce, this.state);\n\t      } else {\n\t        this.state.addBinding(element, gesture, handler, capture, bindOnce);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Bind an element and sets up actions to remove the binding once\n\t     * it has been emitted for the first time.\n\t     * 1. bind(element) - chainable\n\t     * 2. bind(element, gesture, handler, [capture])\n\t     * @param {Element} element - The element object.\n\t     * @param {String|Object} gesture - Gesture key, or a Gesture object.\n\t     * @param {Function} handler - The function to execute when an\n\t     *  event is emitted.\n\t     * @param {Boolean} capture - capture/bubble\n\t     * @return {Object} - a chainable object that has the same function as bind.\n\t     */\n\t\n\t  }, {\n\t    key: 'bindOnce',\n\t    value: function bindOnce(element, gesture, handler, capture) {\n\t      this.bind(element, gesture, handler, capture, true);\n\t    }\n\t\n\t    /**\n\t     * Unbinds an element from either the specified gesture\n\t     *  or all if no element is specified.\n\t     * @param {Element} element -The element to remove.\n\t     * @param {String | Object} [gesture] - A String representing the gesture,\n\t     *   or the actual object being used.\n\t     * @return {Array} - An array of Bindings that were unbound to the element;\n\t     */\n\t\n\t  }, {\n\t    key: 'unbind',\n\t    value: function unbind(element, gesture) {\n\t      var _this2 = this;\n\t\n\t      var bindings = this.state.retrieveBindingsByElement(element);\n\t      var unbound = [];\n\t\n\t      bindings.forEach(function (binding) {\n\t        if (gesture) {\n\t          if (typeof gesture === 'string' && _this2.state.registeredGestures[gesture]) {\n\t            var registeredGesture = _this2.state.registeredGestures[gesture];\n\t            if (registeredGesture.id === binding.gesture.id) {\n\t              element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t              unbound.push(binding);\n\t            }\n\t          }\n\t        } else {\n\t          element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t          unbound.push(binding);\n\t        }\n\t      });\n\t\n\t      return unbound;\n\t    }\n\t\n\t    /* unbind*/\n\t\n\t    /**\n\t     * Registers a new gesture with an assigned key\n\t     * @param {String} key - The key used to register an element to that gesture\n\t     * @param {Gesture} gesture - A gesture object\n\t     */\n\t\n\t  }, {\n\t    key: 'register',\n\t    value: function register(key, gesture) {\n\t      if (typeof key !== 'string') {\n\t        throw new Error('Parameter key is an invalid string');\n\t      }\n\t\n\t      if (!gesture instanceof _Gesture2.default) {\n\t        throw new Error('Parameter gesture is an invalid Gesture object');\n\t      }\n\t\n\t      gesture.setType(key);\n\t      this.state.registerGesture(gesture, key);\n\t    }\n\t\n\t    /* register*/\n\t\n\t    /**\n\t     * Un-registers a gesture from the Region's state such that\n\t     * it is no longer emittable.\n\t     * Unbinds all events that were registered with the type.\n\t     * @param {String|Object} key - Gesture key that was used to\n\t     *  register the object\n\t     * @return {Object} - The Gesture object that was unregistered\n\t     *  or null if it could not be found.\n\t     */\n\t\n\t  }, {\n\t    key: 'unregister',\n\t    value: function unregister(key) {\n\t      this.state.bindings.forEach(function (binding) {\n\t        if (binding.gesture.getType() === key) {\n\t          binding.element.removeEventListener(binding.gesture.getId(), binding.handler, binding.capture);\n\t        }\n\t      });\n\t\n\t      var registeredGesture = this.state.registeredGestures[key];\n\t      delete this.state.registeredGestures[key];\n\t      return registeredGesture;\n\t    }\n\t  }]);\n\t\n\t  return Region;\n\t}();\n\t\n\texports.default = Region;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @file Binder.js\n\t */\n\t\n\t/**\n\t * A chainable object that contains a single element to be bound upon.\n\t * Called from ZingTouch.bind(), and is used to chain over gesture callbacks.\n\t * @class\n\t */\n\tvar Binder =\n\t/**\n\t * Constructor function for the Binder class.\n\t * @param {Element} element - The element to bind gestures to.\n\t * @param {Boolean} bindOnce - Option to bind once and only emit\n\t * the event once.\n\t * @param {Object} state - The state of the Region that is being bound to.\n\t * @return {Object} - Returns 'this' to be chained over and over again.\n\t */\n\tfunction Binder(element, bindOnce, state) {\n\t  var _this = this;\n\t\n\t  _classCallCheck(this, Binder);\n\t\n\t  /**\n\t   * The element to bind gestures to.\n\t   * @type {Element}\n\t   */\n\t  this.element = element;\n\t\n\t  Object.keys(state.registeredGestures).forEach(function (key) {\n\t    _this[key] = function (handler, capture) {\n\t      state.addBinding(_this.element, key, handler, capture, bindOnce);\n\t      return _this;\n\t    };\n\t  });\n\t};\n\t\n\texports.default = Binder;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile Gesture.js\n\tontains the Gesture class\n\tn\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * The Gesture class that all gestures inherit from.\n\t */\n\tvar Gesture = function () {\n\t  /**\n\t   * Constructor function for the Gesture class.\n\t   * @class Gesture\n\t   */\n\t  function Gesture() {\n\t    _classCallCheck(this, Gesture);\n\t\n\t    /**\n\t     * The generic string type of gesture ('expand'|'pan'|'pinch'|\n\t     *  'rotate'|'swipe'|'tap').\n\t     * @type {String}\n\t     */\n\t    this.type = null;\n\t\n\t    /**\n\t     * The unique identifier for each gesture determined at bind time by the\n\t     * state object. This allows for distinctions across instance variables of\n\t     * Gestures that are created on the fly (e.g. Tap-1, Tap-2, etc).\n\t     * @type {String|null}\n\t     */\n\t    this.id = null;\n\t  }\n\t\n\t  /**\n\t   * Set the type of the gesture to be called during an event\n\t   * @param {String} type - The unique identifier of the gesture being created.\n\t   */\n\t\n\t\n\t  _createClass(Gesture, [{\n\t    key: 'setType',\n\t    value: function setType(type) {\n\t      this.type = type;\n\t    }\n\t\n\t    /**\n\t     * getType() - Returns the generic type of the gesture\n\t     * @return {String} - The type of gesture\n\t     */\n\t\n\t  }, {\n\t    key: 'getType',\n\t    value: function getType() {\n\t      return this.type;\n\t    }\n\t\n\t    /**\n\t     * Set the id of the gesture to be called during an event\n\t     * @param {String} id - The unique identifier of the gesture being created.\n\t     */\n\t\n\t  }, {\n\t    key: 'setId',\n\t    value: function setId(id) {\n\t      this.id = id;\n\t    }\n\t\n\t    /**\n\t     * Return the id of the event. If the id does not exist, return the type.\n\t     * @return {String}\n\t     */\n\t\n\t  }, {\n\t    key: 'getId',\n\t    value: function getId() {\n\t      return this.id !== null ? this.id : this.type;\n\t    }\n\t\n\t    /**\n\t     * Updates internal properties with new ones, only if the properties exist.\n\t     * @param {Object} object\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(object) {\n\t      for (var key in object) {\n\t        if (this[key]) {\n\t          this[key] = object[key];\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * start() - Event hook for the start of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t    * @param {Object} state - The state object of the current region.\n\t    * @param {Element} element - The element associated to the binding.\n\t     * @return {null|Object}  - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'start',\n\t    value: function start(inputs, state, element) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * move() - Event hook for the move of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {null|Object} - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * end() - Event hook for the move of a gesture\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null|Object}  - Default of null\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      return null;\n\t    }\n\t\n\t    /**\n\t    * isValid() - Pre-checks to ensure the invariants of a gesture are satisfied.\n\t    * @param {Array} inputs - The array of Inputs on the screen\n\t    * @param {Object} state - The state object of the current region.\n\t    * @param {Element} element - The element associated to the binding.\n\t    * @return {boolean} - If the gesture is valid\n\t    */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid(inputs, state, element) {\n\t      var valid = true;\n\t      // Checks to see if all touches originated from within the target element.\n\t      if (inputs.length > 1) {\n\t        inputs.forEach(function (input) {\n\t          if (!_util2.default.isInside(input.initial.x, input.initial.y, element)) {\n\t            valid = false;\n\t          }\n\t        });\n\t      }\n\t      return valid;\n\t    }\n\t  }]);\n\t\n\t  return Gesture;\n\t}();\n\t\n\texports.default = Gesture;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @file util.js\n\t * Various accessor and mutator functions to handle state and validation.\n\t */\n\t\n\tvar CIRCLE_DEGREES = 360;\n\tvar HALF_CIRCLE_DEGREES = 180;\n\t\n\t/**\n\t *  Contains generic helper functions\n\t * @type {Object}\n\t * @namespace util\n\t */\n\tvar util = {\n\t\n\t  /**\n\t   * Normalizes window events to be either of type start, move, or end.\n\t   * @param {String} type - The event type emitted by the browser\n\t   * @return {null|String} - The normalized event, or null if it is an\n\t   * event not predetermined.\n\t   */\n\t  normalizeEvent: function normalizeEvent(type) {\n\t    switch (type) {\n\t      case 'mousedown':\n\t      case 'touchstart':\n\t      case 'pointerdown':\n\t        return 'start';\n\t      case 'mousemove':\n\t      case 'touchmove':\n\t      case 'pointermove':\n\t        return 'move';\n\t      case 'mouseup':\n\t      case 'touchend':\n\t      case 'pointerup':\n\t        return 'end';\n\t      default:\n\t        return null;\n\t    }\n\t  },\n\t\n\t  /* normalizeEvent*/\n\t\n\t  /**\n\t   * Determines if the current and previous coordinates are within or\n\t   * up to a certain tolerance.\n\t   * @param {Number} currentX - Current event's x coordinate\n\t   * @param {Number} currentY - Current event's y coordinate\n\t   * @param {Number} previousX - Previous event's x coordinate\n\t   * @param {Number} previousY - Previous event's y coordinate\n\t   * @param {Number} tolerance - The tolerance in pixel value.\n\t   * @return {boolean} - true if the current coordinates are\n\t   * within the tolerance, false otherwise\n\t   */\n\t  isWithin: function isWithin(currentX, currentY, previousX, previousY, tolerance) {\n\t    return Math.abs(currentY - previousY) <= tolerance && Math.abs(currentX - previousX) <= tolerance;\n\t  },\n\t\n\t  /* isWithin*/\n\t\n\t  /**\n\t   * Calculates the distance between two points.\n\t   * @param {Number} x0\n\t   * @param {Number} x1\n\t   * @param {Number} y0\n\t   * @param {Number} y1\n\t   * @return {number} The numerical value between two points\n\t   */\n\t  distanceBetweenTwoPoints: function distanceBetweenTwoPoints(x0, x1, y0, y1) {\n\t    var dist = Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));\n\t    return Math.round(dist * 100) / 100;\n\t  },\n\t\n\t\n\t  /**\n\t   * Calculates the midpoint coordinates between two points.\n\t   * @param {Number} x0\n\t   * @param {Number} x1\n\t   * @param {Number} y0\n\t   * @param {Number} y1\n\t   * @return {Object} The coordinates of the midpoint.\n\t   */\n\t  getMidpoint: function getMidpoint(x0, x1, y0, y1) {\n\t    return {\n\t      x: (x0 + x1) / 2,\n\t      y: (y0 + y1) / 2\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Calculates the angle between the projection and an origin point.\n\t   *   |                (projectionX,projectionY)\n\t   *   |             /°\n\t   *   |          /\n\t   *   |       /\n\t   *   |    / θ\n\t   *   | /__________\n\t   *   ° (originX, originY)\n\t   * @param {number} originX\n\t   * @param {number} originY\n\t   * @param {number} projectionX\n\t   * @param {number} projectionY\n\t   * @return {number} - Degree along the unit circle where the project lies\n\t   */\n\t  getAngle: function getAngle(originX, originY, projectionX, projectionY) {\n\t    var angle = Math.atan2(projectionY - originY, projectionX - originX) * (HALF_CIRCLE_DEGREES / Math.PI);\n\t    return CIRCLE_DEGREES - (angle < 0 ? CIRCLE_DEGREES + angle : angle);\n\t  },\n\t\n\t  /**\n\t   * Calculates the angular distance in degrees between two angles\n\t   *  along the unit circle\n\t   * @param {number} start - The starting point in degrees\n\t   * @param {number} end - The ending point in degrees\n\t   * @return {number} The number of degrees between the\n\t   * starting point and ending point. Negative degrees denote a clockwise\n\t   * direction, and positive a counter-clockwise direction.\n\t   */\n\t  getAngularDistance: function getAngularDistance(start, end) {\n\t    var angle = (end - start) % CIRCLE_DEGREES;\n\t    var sign = angle < 0 ? 1 : -1;\n\t    angle = Math.abs(angle);\n\t    return angle > HALF_CIRCLE_DEGREES ? sign * (CIRCLE_DEGREES - angle) : sign * angle;\n\t  },\n\t\n\t\n\t  /**\n\t   * Calculates the velocity of pixel/milliseconds between two points\n\t   * @param {Number} startX\n\t   * @param {Number} startY\n\t   * @param {Number} startTime\n\t   * @param {Number} endX\n\t   * @param {Number} endY\n\t   * @param {Number} endTime\n\t   * @return {Number} velocity of px/time\n\t   */\n\t  getVelocity: function getVelocity(startX, startY, startTime, endX, endY, endTime) {\n\t    var distance = this.distanceBetweenTwoPoints(startX, endX, startY, endY);\n\t    return distance / (endTime - startTime);\n\t  },\n\t\n\t\n\t  /**\n\t   * Returns the farthest right input\n\t   * @param {Array} inputs\n\t   * @return {Object}\n\t   */\n\t  getRightMostInput: function getRightMostInput(inputs) {\n\t    var rightMost = null;\n\t    var distance = Number.MIN_VALUE;\n\t    inputs.forEach(function (input) {\n\t      if (input.initial.x > distance) {\n\t        rightMost = input;\n\t      }\n\t    });\n\t    return rightMost;\n\t  },\n\t\n\t\n\t  /**\n\t   * Determines is the value is an integer and not a floating point\n\t   * @param {Mixed} value\n\t   * @return {boolean}\n\t   */\n\t  isInteger: function isInteger(value) {\n\t    return typeof value === 'number' && value % 1 === 0;\n\t  },\n\t\n\t\n\t  /**\n\t   * Determines if the x,y position of the input is within then target.\n\t   * @param {Number} x -clientX\n\t   * @param {Number} y -clientY\n\t   * @param {Element} target\n\t   * @return {Boolean}\n\t   */\n\t  isInside: function isInside(x, y, target) {\n\t    var rect = target.getBoundingClientRect();\n\t    return x > rect.left && x < rect.left + rect.width && y > rect.top && y < rect.top + rect.height;\n\t  },\n\t\n\t  /**\n\t   * Polyfill for event.propagationPath\n\t   * @param {Event} event\n\t   * @return {Array}\n\t   */\n\t  getPropagationPath: function getPropagationPath(event) {\n\t    if (event.path) {\n\t      return event.path;\n\t    } else {\n\t      var path = [];\n\t      var node = event.target;\n\t      while (node != document) {\n\t        path.push(node);\n\t        node = node.parentNode;\n\t      }\n\t\n\t      return path;\n\t    }\n\t  },\n\t\n\t\n\t  /**\n\t   * Retrieve the index inside the path array\n\t   * @param {Array} path\n\t   * @param {Element} element\n\t   * @return {Element}\n\t   */\n\t  getPathIndex: function getPathIndex(path, element) {\n\t    var index = path.length;\n\t\n\t    path.forEach(function (obj, i) {\n\t      if (obj === element) {\n\t        index = i;\n\t      }\n\t    });\n\t\n\t    return index;\n\t  },\n\t  setMSPreventDefault: function setMSPreventDefault(element) {\n\t    element.style['-ms-content-zooming'] = 'none';\n\t    element.style['touch-action'] = 'none';\n\t  },\n\t  removeMSPreventDefault: function removeMSPreventDefault(element) {\n\t    element.style['-ms-content-zooming'] = '';\n\t    element.style['touch-action'] = '';\n\t  }\n\t};\n\texports.default = util;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _dispatcher = __webpack_require__(7);\n\t\n\tvar _dispatcher2 = _interopRequireDefault(_dispatcher);\n\t\n\tvar _interpreter = __webpack_require__(8);\n\t\n\tvar _interpreter2 = _interopRequireDefault(_interpreter);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Function that handles event flow, negotiating with the interpreter,\n\t * and dispatcher.\n\t * 1. Receiving all touch events in the window.\n\t * 2. Determining which gestures are linked to the target element.\n\t * 3. Negotiating with the Interpreter what event should occur.\n\t * 4. Sending events to the dispatcher to emit events to the target.\n\t * @param {Event} event - The event emitted from the window object.\n\t * @param {Object} region - The region object of the current listener.\n\t */\n\tfunction arbiter(event, region) {\n\t  var state = region.state;\n\t\n\t  /*\n\t   Return if a gesture is not in progress and won't be. Also catches the case\n\t   where a previous event is in a partial state (2 finger pan, waits for both\n\t   inputs to reach touchend)\n\t   */\n\t  if (state.inputs.length === 0 && _util2.default.normalizeEvent(event.type) !== 'start') {\n\t    return;\n\t  }\n\t\n\t  /*\n\t   Check for 'stale' or events that lost focus\n\t   (e.g. a pan goes off screen/off region.)\n\t   Does not affect mobile devices.\n\t   */\n\t  if (typeof event.buttons !== 'undefined' && _util2.default.normalizeEvent(event.type) !== 'end' && event.buttons === 0) {\n\t    state.resetInputs();\n\t    return;\n\t  }\n\t\n\t  // Update the state with the new events. If the event is stopped, return;\n\t  if (!state.updateInputs(event, region.element)) {\n\t    return;\n\t  }\n\t\n\t  // Retrieve the initial target from any one of the inputs\n\t  var bindings = state.retrieveBindingsByInitialPos();\n\t  if (bindings.length > 0) {\n\t    (function () {\n\t      if (region.preventDefault) {\n\t        _util2.default.setMSPreventDefault(region.element);\n\t        event.preventDefault ? event.preventDefault() : event.returnValue = false;\n\t      } else {\n\t        _util2.default.removeMSPreventDefault(region.element);\n\t      }\n\t\n\t      var toBeDispatched = {};\n\t      var gestures = (0, _interpreter2.default)(bindings, event, state);\n\t\n\t      /* Determine the deepest path index to emit the event\n\t       from, to avoid duplicate events being fired. */\n\t\n\t      gestures.forEach(function (gesture) {\n\t        var id = gesture.binding.gesture.id;\n\t        if (toBeDispatched[id]) {\n\t          var path = _util2.default.getPropagationPath(event);\n\t          if (_util2.default.getPathIndex(path, gesture.binding.element) < _util2.default.getPathIndex(path, toBeDispatched[id].binding.element)) {\n\t            toBeDispatched[id] = gesture;\n\t          }\n\t        } else {\n\t          toBeDispatched[id] = gesture;\n\t        }\n\t      });\n\t\n\t      Object.keys(toBeDispatched).forEach(function (index) {\n\t        var gesture = toBeDispatched[index];\n\t        (0, _dispatcher2.default)(gesture.binding, gesture.data, gesture.events);\n\t      });\n\t    })();\n\t  }\n\t\n\t  var endCount = 0;\n\t  state.inputs.forEach(function (input) {\n\t    if (input.getCurrentEventType() === 'end') {\n\t      endCount++;\n\t    }\n\t  });\n\t\n\t  if (endCount === state.inputs.length) {\n\t    state.resetInputs();\n\t  }\n\t} /**\n\t   * @file arbiter.js\n\t   * Contains logic for the dispatcher\n\t   */\n\t\n\texports.default = arbiter;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @file dispatcher.js\n\t * Contains logic for the dispatcher\n\t */\n\t\n\t/**\n\t * Emits data at the target element if available, and bubbles up from\n\t * the target to the parent until the document has been reached.\n\t * Called from the arbiter.\n\t * @param {Binding} binding - An object of type Binding\n\t * @param {Object} data - The metadata computed by the gesture being emitted.\n\t * @param {Array} events - An array of ZingEvents\n\t *  corresponding to the inputs on the screen.\n\t */\n\tfunction dispatcher(binding, data, events) {\n\t  data.events = events;\n\t\n\t  var newEvent = new CustomEvent(binding.gesture.getId(), {\n\t    detail: data,\n\t    bubbles: true,\n\t    cancelable: true\n\t  });\n\t  emitEvent(binding.element, newEvent, binding);\n\t}\n\t\n\t/**\n\t * Emits the new event. Unbinds the event if the event was registered\n\t * at bindOnce.\n\t * @param {Element} target - Element object to emit the event to.\n\t * @param {Event} event - The CustomEvent to emit.\n\t * @param {Binding} binding - An object of type Binding\n\t */\n\tfunction emitEvent(target, event, binding) {\n\t  target.dispatchEvent(event);\n\t  if (binding.bindOnce) {\n\t    ZingTouch.unbind(binding.element, binding.gesture.getType());\n\t  }\n\t}\n\t\n\texports.default = dispatcher;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Receives an event and an array of Bindings (element -> gesture handler)\n\t * to determine what event will be emitted. Called from the arbiter.\n\t * @param {Array} bindings - An array containing Binding objects\n\t * that associate the element to an event handler.\n\t * @param {Object} event - The event emitted from the window.\n\t * @param {Object} state - The state object of the current listener.\n\t * @return {Object | null} - Returns an object containing a binding and\n\t * metadata, or null if a gesture will not be emitted.\n\t */\n\tfunction interpreter(bindings, event, state) {\n\t  var evType = _util2.default.normalizeEvent(event.type);\n\t  var candidates = [];\n\t  bindings.forEach(function (binding) {\n\t    var result = binding.gesture[evType](state.inputs, state, binding.element);\n\t    if (result) {\n\t      (function () {\n\t        var events = [];\n\t        state.inputs.forEach(function (input) {\n\t          events.push(input.current);\n\t        });\n\t\n\t        candidates.push({\n\t          binding: binding,\n\t          data: result,\n\t          events: events\n\t        });\n\t      })();\n\t    }\n\t  });\n\t\n\t  return candidates;\n\t} /**\n\t   * @file interpreter.js\n\t   * Contains logic for the interpreter\n\t   */\n\t\n\texports.default = interpreter;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile State.js\n\tn\t\n\tvar _Gesture = __webpack_require__(4);\n\t\n\tvar _Gesture2 = _interopRequireDefault(_Gesture);\n\t\n\tvar _Expand = __webpack_require__(10);\n\t\n\tvar _Expand2 = _interopRequireDefault(_Expand);\n\t\n\tvar _Pan = __webpack_require__(12);\n\t\n\tvar _Pan2 = _interopRequireDefault(_Pan);\n\t\n\tvar _Pinch = __webpack_require__(13);\n\t\n\tvar _Pinch2 = _interopRequireDefault(_Pinch);\n\t\n\tvar _Rotate = __webpack_require__(14);\n\t\n\tvar _Rotate2 = _interopRequireDefault(_Rotate);\n\t\n\tvar _Swipe = __webpack_require__(15);\n\t\n\tvar _Swipe2 = _interopRequireDefault(_Swipe);\n\t\n\tvar _Tap = __webpack_require__(16);\n\t\n\tvar _Tap2 = _interopRequireDefault(_Tap);\n\t\n\tvar _Binding = __webpack_require__(17);\n\t\n\tvar _Binding2 = _interopRequireDefault(_Binding);\n\t\n\tvar _Input = __webpack_require__(18);\n\t\n\tvar _Input2 = _interopRequireDefault(_Input);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULT_MOUSE_ID = 0;\n\t\n\t/**\n\t * Creates an object related to a Region's state,\n\t * and contains helper methods to update and clean up different states.\n\t */\n\t\n\tvar State = function () {\n\t\n\t  /**\n\t   * Constructor for the State class.\n\t   * @param {String} regionId - The id the region this state is bound to.\n\t   */\n\t  function State(regionId) {\n\t    _classCallCheck(this, State);\n\t\n\t    /**\n\t     * The id for the region this state is bound to.\n\t     * @type {String}\n\t     */\n\t    this.regionId = regionId;\n\t\n\t    /**\n\t     * An array of current and recently inactive\n\t     *  Input objects related to a gesture.\n\t     * @type {Input}\n\t     */\n\t    this.inputs = [];\n\t\n\t    /**\n\t     * An array of Binding objects; The list of relations between elements,\n\t     *   their gestures, and the handlers.\n\t     * @type {Binding}\n\t     */\n\t    this.bindings = [];\n\t\n\t    /**\n\t     * The number of gestures that have been registered with this state\n\t     * @type {Number}\n\t     */\n\t    this.numGestures = 0;\n\t\n\t    /**\n\t     * A key/value map all the registered gestures for the listener.\n\t     *  Note: Can only have one gesture registered to one key.\n\t     * @type {Object}\n\t     */\n\t    this.registeredGestures = {};\n\t\n\t    this.registerGesture(new _Expand2.default(), 'expand');\n\t    this.registerGesture(new _Pan2.default(), 'pan');\n\t    this.registerGesture(new _Rotate2.default(), 'rotate');\n\t    this.registerGesture(new _Pinch2.default(), 'pinch');\n\t    this.registerGesture(new _Swipe2.default(), 'swipe');\n\t    this.registerGesture(new _Tap2.default(), 'tap');\n\t  }\n\t\n\t  /**\n\t   * Creates a new binding with the given element and gesture object.\n\t   * If the gesture object provided is unregistered, it's reference\n\t   * will be saved in as a binding to be later referenced.\n\t   * @param  {Element} element - The element the gesture is bound to.\n\t   * @param {String|Object} gesture  - Either a name of a registered gesture,\n\t   *  or an unregistered  Gesture object.\n\t   * @param {Function} handler - The function handler to be called\n\t   *  when the event is emitted. Used to bind/unbind.\n\t   * @param {Boolean} capture - Whether the gesture is to be\n\t   *  detected in the capture of bubble phase. Used to bind/unbind.\n\t   * @param {Boolean} bindOnce - Option to bind once and\n\t   *  only emit the event once.\n\t   */\n\t\n\t\n\t  _createClass(State, [{\n\t    key: 'addBinding',\n\t    value: function addBinding(element, gesture, handler, capture, bindOnce) {\n\t      var boundGesture = void 0;\n\t\n\t      // Error type checking.\n\t      if (element && typeof element.tagName === 'undefined') {\n\t        throw new Error('Parameter element is an invalid object.');\n\t      }\n\t\n\t      if (typeof handler !== 'function') {\n\t        throw new Error('Parameter handler is invalid.');\n\t      }\n\t\n\t      if (typeof gesture === 'string' && Object.keys(this.registeredGestures).indexOf(gesture) === -1) {\n\t        throw new Error('Parameter ' + gesture + ' is not a registered gesture');\n\t      } else if ((typeof gesture === 'undefined' ? 'undefined' : _typeof(gesture)) === 'object' && !(gesture instanceof _Gesture2.default)) {\n\t        throw new Error('Parameter for the gesture is not of a Gesture type');\n\t      }\n\t\n\t      if (typeof gesture === 'string') {\n\t        boundGesture = this.registeredGestures[gesture];\n\t      } else {\n\t        boundGesture = gesture;\n\t        if (boundGesture.id === '') {\n\t          this.assignGestureId(boundGesture);\n\t        }\n\t      }\n\t\n\t      this.bindings.push(new _Binding2.default(element, boundGesture, handler, capture, bindOnce));\n\t      element.addEventListener(boundGesture.getId(), handler, capture);\n\t    }\n\t\n\t    /**\n\t     * Retrieves the Binding by which an element is associated to.\n\t     * @param {Element} element - The element to find bindings to.\n\t     * @return {Array} - An array of Bindings to which that element is bound\n\t     */\n\t\n\t  }, {\n\t    key: 'retrieveBindingsByElement',\n\t    value: function retrieveBindingsByElement(element) {\n\t      var matches = [];\n\t      this.bindings.map(function (binding) {\n\t        if (binding.element === element) {\n\t          matches.push(binding);\n\t        }\n\t      });\n\t      return matches;\n\t    }\n\t\n\t    /**\n\t     * Retrieves all bindings based upon the initial X/Y position of the inputs.\n\t     * e.g. if gesture started on the correct target element,\n\t     *  but diverted away into the correct region, this would still be valid.\n\t     * @return {Array} - An array of Bindings to which that element is bound\n\t     */\n\t\n\t  }, {\n\t    key: 'retrieveBindingsByInitialPos',\n\t    value: function retrieveBindingsByInitialPos() {\n\t      var _this = this;\n\t\n\t      var matches = [];\n\t      this.bindings.forEach(function (binding) {\n\t        // Determine if at least one input is in the target element.\n\t        // They should all be in the region based upon a prior check\n\t        var inputsInside = _this.inputs.filter(function (input) {\n\t          return _util2.default.isInside(input.initial.x, input.initial.y, binding.element);\n\t        });\n\t        if (inputsInside.length > 0) {\n\t          matches.push(binding);\n\t        }\n\t      });\n\t      return matches;\n\t    }\n\t\n\t    /**\n\t     * Updates the inputs with new information based upon a new event being fired.\n\t     * @param {Event} event - The event being captured.\n\t     * @param {Element} regionElement - The element where\n\t     *  this current Region is bound to.\n\t     * @return {boolean} - returns true for a successful update,\n\t     *  false if the event is invalid.\n\t     */\n\t\n\t  }, {\n\t    key: 'updateInputs',\n\t    value: function updateInputs(event, regionElement) {\n\t      var identifier = DEFAULT_MOUSE_ID;\n\t      var eventType = event.touches ? 'TouchEvent' : event.pointerType ? 'PointerEvent' : 'MouseEvent';\n\t      switch (eventType) {\n\t        case 'TouchEvent':\n\t\n\t          for (var index in event.changedTouches) {\n\t            if (event.changedTouches.hasOwnProperty(index) && _util2.default.isInteger(parseInt(index))) {\n\t              identifier = event.changedTouches[index].identifier;\n\t              update(event, this, identifier, regionElement);\n\t            }\n\t          }\n\t          break;\n\t\n\t        case 'PointerEvent':\n\t          identifier = event.pointerId;\n\t          update(event, this, identifier, regionElement);\n\t          break;\n\t\n\t        case 'MouseEvent':\n\t        default:\n\t          update(event, this, DEFAULT_MOUSE_ID, regionElement);\n\t          break;\n\t      }\n\t      return true;\n\t\n\t      function update(event, state, identifier, regionElement) {\n\t        var eventType = _util2.default.normalizeEvent(event.type);\n\t        var input = findInputById(state.inputs, identifier);\n\t\n\t        // A starting input was not cleaned up properly and still exists.\n\t        if (eventType === 'start' && input) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        // An input has moved outside the region.\n\t        if (eventType !== 'start' && input && !_util2.default.isInside(input.current.x, input.current.y, regionElement)) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        if (eventType !== 'start' && !input) {\n\t          state.resetInputs();\n\t          return;\n\t        }\n\t\n\t        if (eventType === 'start') {\n\t          state.inputs.push(new _Input2.default(event, identifier));\n\t        } else {\n\t          input.update(event, identifier);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all inputs from the state, allowing for a new gesture.\n\t     */\n\t\n\t  }, {\n\t    key: 'resetInputs',\n\t    value: function resetInputs() {\n\t      this.inputs = [];\n\t    }\n\t\n\t    /**\n\t     * Counts the number of active inputs at any given time.\n\t     * @return {Number} - The number of active inputs.\n\t     */\n\t\n\t  }, {\n\t    key: 'numActiveInputs',\n\t    value: function numActiveInputs() {\n\t      var endType = this.inputs.filter(function (input) {\n\t        return input.current.type !== 'end';\n\t      });\n\t      return endType.length;\n\t    }\n\t\n\t    /**\n\t     * Register the gesture to the current region.\n\t     * @param {Object} gesture - The gesture to register\n\t     * @param {String} key - The key to define the new gesture as.\n\t     */\n\t\n\t  }, {\n\t    key: 'registerGesture',\n\t    value: function registerGesture(gesture, key) {\n\t      this.assignGestureId(gesture);\n\t      this.registeredGestures[key] = gesture;\n\t    }\n\t\n\t    /**\n\t     * Tracks the gesture to this state object to become uniquely identifiable.\n\t     * Useful for nested Regions.\n\t     * @param {Gesture} gesture - The gesture to track\n\t     */\n\t\n\t  }, {\n\t    key: 'assignGestureId',\n\t    value: function assignGestureId(gesture) {\n\t      gesture.setId(this.regionId + '-' + this.numGestures++);\n\t    }\n\t  }]);\n\t\n\t  return State;\n\t}();\n\t/**\n\t * Searches through each input, comparing the browser's identifier key\n\t *  for touches, to the stored one in each input\n\t * @param {Array} inputs - The array of inputs in state.\n\t * @param {String} identifier - The identifier the browser has assigned.\n\t * @return {Input} - The input object with the corresponding identifier,\n\t *  null if it did not find any.\n\t */\n\t\n\t\n\tfunction findInputById(inputs, identifier) {\n\t  for (var i = 0; i < inputs.length; i++) {\n\t    if (inputs[i].identifier === identifier) {\n\t      return inputs[i];\n\t    }\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\texports.default = State;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Distance2 = __webpack_require__(11);\n\t\n\tvar _Distance3 = _interopRequireDefault(_Distance2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Expand.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Expand class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Expand is defined as two inputs moving farther away from each other.\n\t * This gesture does not account for any start/end events to allow for the\n\t * event to interact with the Pan and Pinch events.\n\t * @class Expand\n\t */\n\tvar Expand = function (_Distance) {\n\t  _inherits(Expand, _Distance);\n\t\n\t  /**\n\t   * Constructor function for the Expand class.\n\t   * @param {object} options\n\t   */\n\t  function Expand(options) {\n\t    _classCallCheck(this, Expand);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Expand.__proto__ || Object.getPrototypeOf(Expand)).call(this, options));\n\t\n\t    _this.type = 'expand';\n\t    return _this;\n\t  }\n\t\n\t  return Expand;\n\t}(_Distance3.default);\n\t\n\texports.default = Expand;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Distance.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the abstract Distance class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 2;\n\tvar DEFAULT_MIN_THRESHOLD = 1;\n\t\n\t/**\n\t * A Distance is defined as two inputs moving either together or apart.\n\t * @class Distance\n\t */\n\t\n\tvar Distance = function (_Gesture) {\n\t  _inherits(Distance, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Distance class.\n\t   * @param {Object} options\n\t   */\n\t  function Distance(options) {\n\t    _classCallCheck(this, Distance);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Distance.__proto__ || Object.getPrototypeOf(Distance)).call(this));\n\t\n\t    _this.type = 'distance';\n\t\n\t    /**\n\t     * The minimum amount in pixels the inputs must move until it is fired.\n\t     * @type {Number}\n\t     */\n\t    _this.threshold = options && options.threshold ? options.threshold : DEFAULT_MIN_THRESHOLD;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Initialized the lastEmitted\n\t   * gesture and stores it in the first input for reference events.\n\t   * @param {Array} inputs\n\t   */\n\t\n\t\n\t  _createClass(Distance, [{\n\t    key: 'start',\n\t    value: function start(inputs, state, element) {\n\t      if (!this.isValid(inputs, state, element)) {\n\t        return null;\n\t      }\n\t      if (inputs.length === DEFAULT_INPUTS) {\n\t        // Store the progress in the first input.\n\t        var progress = inputs[0].getGestureProgress(this.type);\n\t        progress.lastEmittedDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Event hook for the move of a gesture.\n\t     *  Determines if the two points are moved in the expected direction relative\n\t     *  to the current distance and the last distance.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {Object | null} - Returns the distance in pixels between two inputs\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (state.numActiveInputs() === DEFAULT_INPUTS) {\n\t        var currentDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t        var lastDistance = _util2.default.distanceBetweenTwoPoints(inputs[0].previous.x, inputs[1].previous.x, inputs[0].previous.y, inputs[1].previous.y);\n\t\n\t        var centerPoint = _util2.default.getMidpoint(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t\n\t        // Retrieve the first input's progress.\n\t        var progress = inputs[0].getGestureProgress(this.type);\n\t\n\t        if (this.constructor.name === 'Expand') {\n\t          if (currentDistance < lastDistance) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t          } else if (currentDistance - progress.lastEmittedDistance >= this.threshold) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t            return {\n\t              distance: currentDistance,\n\t              center: centerPoint\n\t            };\n\t          }\n\t        } else {\n\t          if (currentDistance > lastDistance) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t          } else if (currentDistance < lastDistance && progress.lastEmittedDistance - currentDistance >= this.threshold) {\n\t            progress.lastEmittedDistance = currentDistance;\n\t            return {\n\t              distance: currentDistance,\n\t              center: centerPoint\n\t            };\n\t          }\n\t        }\n\t\n\t        return null;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Distance;\n\t}(_Gesture3.default);\n\t\n\texports.default = Distance;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Pan.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Pan class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MIN_THRESHOLD = 1;\n\t\n\t/**\n\t * A Pan is defined as a normal movement in any direction on a screen.\n\t * Pan gestures do not track start events and can interact with pinch and \\\n\t *  expand gestures.\n\t * @class Pan\n\t */\n\t\n\tvar Pan = function (_Gesture) {\n\t  _inherits(Pan, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Pan class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.numInputs=1] - Number of inputs for the\n\t   *  Pan gesture.\n\t   * @param {Number} [options.threshold=1] - The minimum number of\n\t   * pixels the input has to move to trigger this gesture.\n\t   */\n\t  function Pan(options) {\n\t    _classCallCheck(this, Pan);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Pan.__proto__ || Object.getPrototypeOf(Pan)).call(this));\n\t\n\t    _this.type = 'pan';\n\t\n\t    /**\n\t     * The number of inputs to trigger a Pan can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * The minimum amount in pixels the pan must move until it is fired.\n\t     * @type {Number}\n\t     */\n\t    _this.threshold = options && options.threshold ? options.threshold : DEFAULT_MIN_THRESHOLD;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Marks each input as active,\n\t   * so it can invalidate any end events.\n\t   * @param {Array} inputs\n\t   */\n\t\n\t\n\t  _createClass(Pan, [{\n\t    key: 'start',\n\t    value: function start(inputs) {\n\t      var _this2 = this;\n\t\n\t      inputs.forEach(function (input) {\n\t        var progress = input.getGestureProgress(_this2.getId());\n\t        progress.active = true;\n\t        progress.lastEmitted = {\n\t          x: input.current.x,\n\t          y: input.current.y\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * move() - Event hook for the move of a gesture.\n\t     * Fired whenever the input length is met, and keeps a boolean flag that\n\t     * the gesture has fired at least once.\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {Object} - Returns the distance in pixels between the two inputs.\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (this.numInputs === inputs.length) {\n\t        var output = {\n\t          data: []\n\t        };\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t\n\t          var reachedThreshold = false;\n\t\n\t          // Check threshold distance\n\t          var yThreshold = Math.abs(inputs[i].current.y - progress.lastEmitted.y) > this.threshold;\n\t          var xThreshold = Math.abs(inputs[i].current.x - progress.lastEmitted.x) > this.threshold;\n\t          reachedThreshold = yThreshold || xThreshold;\n\t\n\t          if (progress.active && reachedThreshold) {\n\t            output.data[i] = {\n\t              distanceFromOrigin: _util2.default.distanceBetweenTwoPoints(inputs[i].initial.x, inputs[i].current.x, inputs[i].initial.y, inputs[i].current.y),\n\t              directionFromOrigin: _util2.default.getAngle(inputs[i].initial.x, inputs[i].initial.y, inputs[i].current.x, inputs[i].current.y),\n\t              currentDirection: _util2.default.getAngle(progress.lastEmitted.x, progress.lastEmitted.y, inputs[i].current.x, inputs[i].current.y)\n\t            };\n\t            progress.lastEmitted.x = inputs[i].current.x;\n\t            progress.lastEmitted.y = inputs[i].current.y;\n\t          } else {\n\t            return null;\n\t          }\n\t        }\n\t      }\n\t\n\t      return output;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * end() - Event hook for the end of a gesture. If the gesture has at least\n\t     * fired once, then it ends on the first end event such that any remaining\n\t     * inputs will not trigger the event until all inputs have reached the\n\t     * touchend event. Any touchend->touchstart events that occur before all\n\t     * inputs are fully off the screen should not fire.\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null} - null if the gesture is not to be emitted,\n\t     *  Object with information otherwise.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      var _this3 = this;\n\t\n\t      inputs.forEach(function (input) {\n\t        var progress = input.getGestureProgress(_this3.getId());\n\t        progress.active = false;\n\t      });\n\t      return null;\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Pan;\n\t}(_Gesture3.default);\n\t\n\texports.default = Pan;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Distance2 = __webpack_require__(11);\n\t\n\tvar _Distance3 = _interopRequireDefault(_Distance2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Pinch.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Pinch class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t/**\n\t * An Pinch is defined as two inputs moving closer to each other.\n\t * This gesture does not account for any start/end events to allow for the event\n\t * to interact with the Pan and Pinch events.\n\t * @class Pinch\n\t */\n\tvar Pinch = function (_Distance) {\n\t  _inherits(Pinch, _Distance);\n\t\n\t  /**\n\t   * Constructor function for the Pinch class.\n\t   * @param {Object} options\n\t   */\n\t  function Pinch(options) {\n\t    _classCallCheck(this, Pinch);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Pinch.__proto__ || Object.getPrototypeOf(Pinch)).call(this, options));\n\t\n\t    _this.type = 'pinch';\n\t    return _this;\n\t  }\n\t\n\t  return Pinch;\n\t}(_Distance3.default);\n\t\n\texports.default = Pinch;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Rotate.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Rotate class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar MAX_INPUTS = 2;\n\t\n\t/**\n\t * A Rotate is defined as two inputs moving about a circle,\n\t * maintaining a relatively equal radius.\n\t * @class Rotate\n\t */\n\t\n\tvar Rotate = function (_Gesture) {\n\t  _inherits(Rotate, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Rotate class.\n\t   */\n\t  function Rotate() {\n\t    _classCallCheck(this, Rotate);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Rotate.__proto__ || Object.getPrototypeOf(Rotate)).call(this));\n\t\n\t    _this.type = 'rotate';\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * move() - Event hook for the move of a gesture. Obtains the midpoint of two\n\t   * the two inputs and calculates the projection of the right most input along\n\t   * a unit circle to obtain an angle. This angle is compared to the previously\n\t   * calculated angle to output the change of distance, and is compared to the\n\t   * initial angle to output the distance from the initial angle to the current\n\t   * angle.\n\t   * @param {Array} inputs - The array of Inputs on the screen\n\t   * @param {Object} state - The state object of the current listener.\n\t   * @param {Element} element - The element associated to the binding.\n\t   * @return {null} - null if this event did not occur\n\t   * @return {Object} obj.angle - The current angle along the unit circle\n\t   * @return {Object} obj.distanceFromOrigin - The angular distance travelled\n\t   * from the initial right most point.\n\t   * @return {Object} obj.distanceFromLast - The change of angle between the\n\t   * last position and the current position.\n\t   */\n\t\n\t\n\t  _createClass(Rotate, [{\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (state.numActiveInputs() <= MAX_INPUTS) {\n\t        var referencePivot = void 0;\n\t        var diffX = void 0;\n\t        var diffY = void 0;\n\t        var input = void 0;\n\t        if (state.numActiveInputs() === 1) {\n\t          var bRect = element.getBoundingClientRect();\n\t          referencePivot = {\n\t            x: bRect.left + bRect.width / 2,\n\t            y: bRect.top + bRect.height / 2\n\t          };\n\t          input = inputs[0];\n\t          diffX = diffY = 0;\n\t        } else {\n\t          referencePivot = _util2.default.getMidpoint(inputs[0].initial.x, inputs[1].initial.x, inputs[0].initial.y, inputs[1].initial.y);\n\t          var currentPivot = _util2.default.getMidpoint(inputs[0].current.x, inputs[1].current.x, inputs[0].current.y, inputs[1].current.y);\n\t          diffX = referencePivot.x - currentPivot.x;\n\t          diffY = referencePivot.y - currentPivot.y;\n\t          input = _util2.default.getRightMostInput(inputs);\n\t        }\n\t\n\t        // Translate the current pivot point.\n\t        var currentAngle = _util2.default.getAngle(referencePivot.x, referencePivot.y, input.current.x + diffX, input.current.y + diffY);\n\t\n\t        var progress = input.getGestureProgress(this.getId());\n\t        if (!progress.initialAngle) {\n\t          progress.initialAngle = progress.previousAngle = currentAngle;\n\t          progress.distance = progress.change = 0;\n\t        } else {\n\t          progress.change = _util2.default.getAngularDistance(progress.previousAngle, currentAngle);\n\t          progress.distance = progress.distance + progress.change;\n\t        }\n\t\n\t        progress.previousAngle = currentAngle;\n\t\n\t        return {\n\t          angle: currentAngle,\n\t          distanceFromOrigin: progress.distance,\n\t          distanceFromLast: progress.change\n\t        };\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t  }]);\n\t\n\t  return Rotate;\n\t}(_Gesture3.default);\n\t\n\texports.default = Rotate;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Swipe.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Swipe class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MAX_REST_TIME = 100;\n\tvar DEFAULT_ESCAPE_VELOCITY = 0.2;\n\tvar DEFAULT_TIME_DISTORTION = 100;\n\tvar DEFAULT_MAX_PROGRESS_STACK = 10;\n\t\n\t/**\n\t * A swipe is defined as input(s) moving in the same direction in an relatively\n\t * increasing velocity and leaving the screen at some point before it drops\n\t * below it's escape velocity.\n\t * @class Swipe\n\t */\n\t\n\tvar Swipe = function (_Gesture) {\n\t  _inherits(Swipe, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Swipe class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.numInputs] - The number of inputs to trigger a\n\t   * Swipe can be variable, and the maximum number being a factor of the browser\n\t   *  move and current move events.\n\t   * @param {Number} [options.maxRestTime] - The maximum resting time a point\n\t   *  has between it's last\n\t   * @param {Number} [options.escapeVelocity] - The minimum velocity the input\n\t   *  has to be at to emit a swipe.\n\t   * @param {Number} [options.timeDistortion] - (EXPERIMENTAL) A value of time\n\t   *  in milliseconds to distort between events.\n\t   * @param {Number} [options.maxProgressStack] - (EXPERIMENTAL)The maximum\n\t   *  amount of move events to keep\n\t   * track of for a swipe.\n\t   */\n\t  function Swipe(options) {\n\t    _classCallCheck(this, Swipe);\n\t\n\t    /**\n\t     * The type of the Gesture\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Swipe.__proto__ || Object.getPrototypeOf(Swipe)).call(this));\n\t\n\t    _this.type = 'swipe';\n\t\n\t    /**\n\t     * The number of inputs to trigger a Swipe can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * The maximum resting time a point has between it's last move and\n\t     * current move events.\n\t     * @type {Number}\n\t     */\n\t    _this.maxRestTime = options && options.maxRestTime ? options.maxRestTime : DEFAULT_MAX_REST_TIME;\n\t\n\t    /**\n\t     * The minimum velocity the input has to be at to emit a swipe.\n\t     * This is useful for determining the difference between\n\t     * a swipe and a pan gesture.\n\t     * @type {number}\n\t     */\n\t    _this.escapeVelocity = options && options.escapeVelocity ? options.escapeVelocity : DEFAULT_ESCAPE_VELOCITY;\n\t\n\t    /**\n\t     * (EXPERIMENTAL) A value of time in milliseconds to distort between events.\n\t     * Browsers do not accurately measure time with the Date constructor in\n\t     * milliseconds, so consecutive events sometimes display the same timestamp\n\t     * but different x/y coordinates. This will distort a previous time\n\t     * in such cases by the timeDistortion's value.\n\t     * @type {number}\n\t     */\n\t    _this.timeDistortion = options && options.timeDistortion ? options.timeDistortion : DEFAULT_TIME_DISTORTION;\n\t\n\t    /**\n\t     * (EXPERIMENTAL) The maximum amount of move events to keep track of for a\n\t     * swipe. This helps give a more accurate estimate of the user's velocity.\n\t     * @type {number}\n\t     */\n\t    _this.maxProgressStack = options && options.maxProgressStack ? options.maxProgressStack : DEFAULT_MAX_PROGRESS_STACK;\n\t    return _this;\n\t  }\n\t\n\t  /**\n\t   * Event hook for the move of a gesture. Captures an input's x/y coordinates\n\t   * and the time of it's event on a stack.\n\t   * @param {Array} inputs - The array of Inputs on the screen.\n\t   * @param {Object} state - The state object of the current region.\n\t   * @param {Element} element - The element associated to the binding.\n\t   * @return {null} - Swipe does not emit from a move.\n\t   */\n\t\n\t\n\t  _createClass(Swipe, [{\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      if (this.numInputs === inputs.length) {\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t          if (!progress.moves) {\n\t            progress.moves = [];\n\t          }\n\t\n\t          progress.moves.push({\n\t            time: new Date().getTime(),\n\t            x: inputs[i].current.x,\n\t            y: inputs[i].current.y\n\t          });\n\t\n\t          if (progress.length > this.maxProgressStack) {\n\t            progress.moves.shift();\n\t          }\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * Determines if the input's history validates a swipe motion.\n\t     * Determines if it did not come to a complete stop (maxRestTime), and if it\n\t     * had enough of a velocity to be considered (ESCAPE_VELOCITY).\n\t     * @param {Array} inputs - The array of Inputs on the screen\n\t     * @return {null|Object} - null if the gesture is not to be emitted,\n\t     *  Object with information otherwise.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      if (this.numInputs === inputs.length) {\n\t        var output = {\n\t          data: []\n\t        };\n\t\n\t        for (var i = 0; i < inputs.length; i++) {\n\t          // Determine if all input events are on the 'end' event.\n\t          if (inputs[i].current.type !== 'end') {\n\t            return;\n\t          }\n\t\n\t          var progress = inputs[i].getGestureProgress(this.getId());\n\t          if (progress.moves && progress.moves.length > 2) {\n\t            // CHECK : Return if the input has not moved in maxRestTime ms.\n\t\n\t            var currentMove = progress.moves.pop();\n\t            if (new Date().getTime() - currentMove.time > this.maxRestTime) {\n\t              return null;\n\t            }\n\t\n\t            var lastMove = void 0;\n\t            var index = progress.moves.length - 1;\n\t\n\t            /* Date is unreliable, so we retrieve the last move event where\n\t             the time is not the same. */\n\t            while (index !== -1) {\n\t              if (progress.moves[index].time !== currentMove.time) {\n\t                lastMove = progress.moves[index];\n\t                break;\n\t              }\n\t\n\t              index--;\n\t            }\n\t\n\t            /* If the date is REALLY unreliable, we apply a time distortion\n\t             to the last event.\n\t             */\n\t            if (!lastMove) {\n\t              lastMove = progress.moves.pop();\n\t              lastMove.time += this.timeDistortion;\n\t            }\n\t\n\t            var velocity = _util2.default.getVelocity(lastMove.x, lastMove.y, lastMove.time, currentMove.x, currentMove.y, currentMove.time);\n\t\n\t            output.data[i] = {\n\t              velocity: velocity,\n\t              distance: _util2.default.distanceBetweenTwoPoints(lastMove.x, currentMove.x, lastMove.y, currentMove.y),\n\t              duration: currentMove.time - lastMove.time,\n\t              currentDirection: _util2.default.getAngle(lastMove.x, lastMove.y, currentMove.x, currentMove.y)\n\t            };\n\t          }\n\t        }\n\t\n\t        for (var i = 0; i < output.data.length; i++) {\n\t          if (velocity < this.escapeVelocity) {\n\t            return null;\n\t          }\n\t        }\n\t\n\t        if (output.data.length > 0) {\n\t          return output;\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Swipe;\n\t}(_Gesture3.default);\n\t\n\texports.default = Swipe;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Gesture2 = __webpack_require__(4);\n\t\n\tvar _Gesture3 = _interopRequireDefault(_Gesture2);\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file Tap.js\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Contains the Tap class\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar DEFAULT_MIN_DELAY_MS = 0;\n\tvar DEFAULT_MAX_DELAY_MS = 300;\n\tvar DEFAULT_INPUTS = 1;\n\tvar DEFAULT_MOVE_PX_TOLERANCE = 10;\n\t\n\t/**\n\t * A Tap is defined as a touchstart to touchend event in quick succession.\n\t * @class Tap\n\t */\n\t\n\tvar Tap = function (_Gesture) {\n\t  _inherits(Tap, _Gesture);\n\t\n\t  /**\n\t   * Constructor function for the Tap class.\n\t   * @param {Object} [options] - The options object.\n\t   * @param {Number} [options.minDelay=0] - The minimum delay between a\n\t   * touchstart and touchend can be configured in milliseconds.\n\t   * @param {Number} [options.maxDelay=300] - The maximum delay between a\n\t   * touchstart and touchend can be configured in milliseconds.\n\t   * @param {Number} [options.numInputs=1] - Number of inputs for Tap gesture.\n\t   * @param {Number} [options.tolerance=10] - The tolerance in pixels\n\t   *  a user can move.\n\t   */\n\t  function Tap(options) {\n\t    _classCallCheck(this, Tap);\n\t\n\t    /**\n\t     * The type of the Gesture.\n\t     * @type {String}\n\t     */\n\t    var _this = _possibleConstructorReturn(this, (Tap.__proto__ || Object.getPrototypeOf(Tap)).call(this));\n\t\n\t    _this.type = 'tap';\n\t\n\t    /**\n\t     * The minimum amount between a touchstart and a touchend can be configured\n\t     * in milliseconds. The minimum delay starts to count down when the expected\n\t     * number of inputs are on the screen, and ends when ALL inputs are off the\n\t     * screen.\n\t     * @type {Number}\n\t     */\n\t    _this.minDelay = options && options.minDelay ? options.minDelay : DEFAULT_MIN_DELAY_MS;\n\t\n\t    /**\n\t     * The maximum delay between a touchstart and touchend can be configured in\n\t     * milliseconds. The maximum delay starts to count down when the expected\n\t     * number of inputs are on the screen, and ends when ALL inputs are off the\n\t     * screen.\n\t     * @type {Number}\n\t     */\n\t    _this.maxDelay = options && options.maxDelay ? options.maxDelay : DEFAULT_MAX_DELAY_MS;\n\t\n\t    /**\n\t     * The number of inputs to trigger a Tap can be variable,\n\t     * and the maximum number being a factor of the browser.\n\t     * @type {Number}\n\t     */\n\t    _this.numInputs = options && options.numInputs ? options.numInputs : DEFAULT_INPUTS;\n\t\n\t    /**\n\t     * A move tolerance in pixels allows some slop between a user's start to end\n\t     * events. This allows the Tap gesture to be triggered more easily.\n\t     * @type {number}\n\t     */\n\t    _this.tolerance = options && options.tolerance ? options.tolerance : DEFAULT_MOVE_PX_TOLERANCE;\n\t    return _this;\n\t  }\n\t\n\t  /* constructor*/\n\t\n\t  /**\n\t   * Event hook for the start of a gesture. Keeps track of when the inputs\n\t   * trigger the start event.\n\t   * @param {Array} inputs - The array of Inputs on the screen.\n\t   * @return {null} - Tap does not trigger on a start event.\n\t   */\n\t\n\t\n\t  _createClass(Tap, [{\n\t    key: 'start',\n\t    value: function start(inputs) {\n\t      var _this2 = this;\n\t\n\t      if (inputs.length === this.numInputs) {\n\t        inputs.forEach(function (input) {\n\t          var progress = input.getGestureProgress(_this2.type);\n\t          progress.start = new Date().getTime();\n\t        });\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* start*/\n\t\n\t    /**\n\t     * Event hook for the move of a gesture. The Tap event reaches here if the\n\t     * user starts to move their input before an 'end' event is reached.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @param {Object} state - The state object of the current region.\n\t     * @param {Element} element - The element associated to the binding.\n\t     * @return {null} - Tap does not trigger on a move event.\n\t     */\n\t\n\t  }, {\n\t    key: 'move',\n\t    value: function move(inputs, state, element) {\n\t      var _this3 = this;\n\t\n\t      for (var i = 0; i < inputs.length; i++) {\n\t        if (inputs[i].getCurrentEventType() === 'move') {\n\t          var current = inputs[i].current;\n\t          var previous = inputs[i].previous;\n\t          if (!_util2.default.isWithin(current.x, current.y, previous.x, previous.y, this.tolerance)) {\n\t            var _ret = function () {\n\t              var type = _this3.type;\n\t              inputs.forEach(function (input) {\n\t                input.resetProgress(type);\n\t              });\n\t\n\t              return {\n\t                v: null\n\t              };\n\t            }();\n\t\n\t            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t          }\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /* move*/\n\t\n\t    /**\n\t     * Event hook for the end of a gesture.\n\t     * Determines if this the tap event can be fired if the delay and tolerance\n\t     * constraints are met. Also waits for all of the inputs to be off the screen\n\t     * before determining if the gesture is triggered.\n\t     * @param {Array} inputs - The array of Inputs on the screen.\n\t     * @return {null|Object} - null if the gesture is not to be emitted,\n\t     * Object with information otherwise. Returns the interval time between start\n\t     * and end events.\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end(inputs) {\n\t      var _this4 = this;\n\t\n\t      if (inputs.length !== this.numInputs) {\n\t        return null;\n\t      }\n\t\n\t      var startTime = Number.MAX_VALUE;\n\t      for (var i = 0; i < inputs.length; i++) {\n\t        if (inputs[i].getCurrentEventType() !== 'end') {\n\t          return null;\n\t        }\n\t\n\t        var progress = inputs[i].getGestureProgress(this.type);\n\t        if (!progress.start) {\n\t          return null;\n\t        }\n\t\n\t        // Find the most recent input's startTime\n\t        if (progress.start < startTime) {\n\t          startTime = progress.start;\n\t        }\n\t      }\n\t\n\t      var interval = new Date().getTime() - startTime;\n\t      if (this.minDelay <= interval && this.maxDelay >= interval) {\n\t        return {\n\t          interval: interval\n\t        };\n\t      } else {\n\t        var _ret2 = function () {\n\t          var type = _this4.type;\n\t          inputs.forEach(function (input) {\n\t            input.resetProgress(type);\n\t          });\n\t\n\t          return {\n\t            v: null\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n\t      }\n\t    }\n\t\n\t    /* end*/\n\t\n\t  }]);\n\t\n\t  return Tap;\n\t}(_Gesture3.default);\n\t\n\texports.default = Tap;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * @file Binding.js\n\t */\n\t\n\t/**\n\t * Responsible for creating a binding between an element and a gesture.\n\t * @class Binding\n\t */\n\tvar Binding =\n\t/**\n\t * Constructor function for the Binding class.\n\t * @param {Element} element - The element to associate the gesture to.\n\t * @param {Gesture} gesture - A instance of the Gesture type.\n\t * @param {Function} handler - The function handler to execute when a\n\t * gesture is recognized\n\t * on the associated element.\n\t * @param {Boolean} [capture=false] - A boolean signifying if the event is\n\t * to be emitted during\n\t * the capture or bubble phase.\n\t * @param {Boolean} [bindOnce=false] - A boolean flag\n\t * used for the bindOnce syntax.\n\t */\n\tfunction Binding(element, gesture, handler, capture, bindOnce) {\n\t  _classCallCheck(this, Binding);\n\t\n\t  /**\n\t   * The element to associate the gesture to.\n\t   * @type {Element}\n\t   */\n\t  this.element = element;\n\t  /**\n\t   * A instance of the Gesture type.\n\t   * @type {Gesture}\n\t   */\n\t  this.gesture = gesture;\n\t  /**\n\t   * The function handler to execute when a gesture is\n\t   * recognized on the associated element.\n\t   * @type {Function}\n\t   */\n\t  this.handler = handler;\n\t\n\t  /**\n\t   * A boolean signifying if the event is to be\n\t   * emitted during the capture or bubble phase.\n\t   * @type {Boolean}\n\t   */\n\t  this.capture = typeof capture !== 'undefined' ? capture : false;\n\t\n\t  /**\n\t   * A boolean flag used for the bindOnce syntax.\n\t   * @type {Boolean}\n\t   */\n\t  this.bindOnce = typeof bindOnce !== 'undefined' ? bindOnce : false;\n\t};\n\t\n\texports.default = Binding;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\n\tfile Input.js\n\tn\t\n\tvar _ZingEvent = __webpack_require__(19);\n\t\n\tvar _ZingEvent2 = _interopRequireDefault(_ZingEvent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Tracks a single input and contains information about the\n\t * current, previous, and initial events.\n\t * Contains the progress of each Input and it's associated gestures.\n\t * @class Input\n\t */\n\tvar Input = function () {\n\t\n\t  /**\n\t   * Constructor function for the Input class.\n\t   * @param {Event} event - The Event object from the window\n\t   * @param {Number} [identifier=0] - The identifier for each input event\n\t   * (taken from event.changedTouches)\n\t   */\n\t  function Input(event, identifier) {\n\t    _classCallCheck(this, Input);\n\t\n\t    var currentEvent = new _ZingEvent2.default(event, identifier);\n\t\n\t    /**\n\t     * Holds the initial event object. A touchstart/mousedown event.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.initial = currentEvent;\n\t\n\t    /**\n\t     * Holds the most current event for this Input, disregarding any other past,\n\t     * current, and future events that other Inputs participate in.\n\t     * e.g. This event ended in an 'end' event, but another Input is still\n\t     * participating in events -- this will not be updated in such cases.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.current = currentEvent;\n\t\n\t    /**\n\t     * Holds the previous event that took place.\n\t     * @type {ZingEvent}\n\t     */\n\t    this.previous = currentEvent;\n\t\n\t    /**\n\t     * Refers to the event.touches index, or 0 if a simple mouse event occurred.\n\t     * @type {Number}\n\t     */\n\t    this.identifier = typeof identifier !== 'undefined' ? identifier : 0;\n\t\n\t    /**\n\t     * Stores internal state between events for\n\t     * each gesture based off of the gesture's id.\n\t     * @type {Object}\n\t     */\n\t    this.progress = {};\n\t  }\n\t\n\t  /**\n\t   * Receives an input, updates the internal state of what the input has done.\n\t   * @param {Event} event - The event object to wrap with a ZingEvent.\n\t   * @param {Number} touchIdentifier - The index of inputs, from event.touches\n\t   */\n\t\n\t\n\t  _createClass(Input, [{\n\t    key: 'update',\n\t    value: function update(event, touchIdentifier) {\n\t      this.previous = this.current;\n\t      this.current = new _ZingEvent2.default(event, touchIdentifier);\n\t    }\n\t\n\t    /**\n\t     * Returns the progress of the specified gesture.\n\t     * @param {String} id - The identifier for each unique Gesture's progress.\n\t     * @return {Object} - The progress of the gesture.\n\t     * Creates an empty object if no progress has begun.\n\t     */\n\t\n\t  }, {\n\t    key: 'getGestureProgress',\n\t    value: function getGestureProgress(id) {\n\t      if (!this.progress[id]) {\n\t        this.progress[id] = {};\n\t      }\n\t      return this.progress[id];\n\t    }\n\t\n\t    /**\n\t     * Returns the normalized current Event's type.\n\t     * @return {String} The current event's type ( start | move | end )\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentEventType',\n\t    value: function getCurrentEventType() {\n\t      return this.current.type;\n\t    }\n\t\n\t    /**\n\t     * Resets a progress/state object of the specified gesture.\n\t     * @param {String} id - The identifier of the specified gesture\n\t     */\n\t\n\t  }, {\n\t    key: 'resetProgress',\n\t    value: function resetProgress(id) {\n\t      this.progress[id] = {};\n\t    }\n\t  }]);\n\t\n\t  return Input;\n\t}();\n\t\n\texports.default = Input;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _util = __webpack_require__(5);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n\t                                                                                                                                                           * @file ZingEvent.js\n\t                                                                                                                                                           * Contains logic for ZingEvents\n\t                                                                                                                                                           */\n\t\n\tvar INITIAL_COORDINATE = 0;\n\t/**\n\t * An event wrapper that normalizes events across browsers and input devices\n\t * @class ZingEvent\n\t */\n\t\n\tvar ZingEvent =\n\t/**\n\t * @constructor\n\t * @param {Event} event - The event object being wrapped.\n\t * @param {Array} event.touches - The number of touches on\n\t *  a screen (mobile only).\n\t * @param {Object} event.changedTouches - The TouchList representing\n\t * points that participated in the event.\n\t * @param {Number} touchIdentifier - The index of touch if applicable\n\t */\n\tfunction ZingEvent(event, touchIdentifier) {\n\t  _classCallCheck(this, ZingEvent);\n\t\n\t  /**\n\t   * The original event object.\n\t   * @type {Event}\n\t   */\n\t  this.originalEvent = event;\n\t\n\t  /**\n\t   * The type of event or null if it is an event not predetermined.\n\t   * @see util.normalizeEvent\n\t   * @type {String | null}\n\t   */\n\t  this.type = _util2.default.normalizeEvent(event.type);\n\t\n\t  /**\n\t   * The X coordinate for the event, based off of the client.\n\t   * @type {number}\n\t   */\n\t  this.x = INITIAL_COORDINATE;\n\t\n\t  /**\n\t   * The Y coordinate for the event, based off of the client.\n\t   * @type {number}\n\t   */\n\t  this.y = INITIAL_COORDINATE;\n\t\n\t  var eventObj = void 0;\n\t  if (event.touches && event.changedTouches) {\n\t    for (var i = 0; i < event.changedTouches.length; i++) {\n\t      if (event.changedTouches[i].identifier === touchIdentifier) {\n\t        eventObj = event.changedTouches[i];\n\t        break;\n\t      }\n\t    }\n\t  } else {\n\t    eventObj = event;\n\t  }\n\t\n\t  this.x = this.clientX = eventObj.clientX;\n\t  this.y = this.clientY = eventObj.clientY;\n\t\n\t  this.pageX = eventObj.pageX;\n\t  this.pageY = eventObj.pageY;\n\t\n\t  this.screenX = eventObj.screenX;\n\t  this.screenY = eventObj.screenY;\n\t};\n\t\n\texports.default = ZingEvent;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ./dist/zingtouch.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba963050fa137fcec55a","/**\n * @file main.js\n * Main file to setup event listeners on the document,\n * and to expose the ZingTouch object\n */\n\nimport ZingTouch from './../ZingTouch.js';\nwindow.ZingTouch = ZingTouch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/main.js","/**\n * @file ZingTouch.js\n * Main object containing API methods and Gesture constructors\n */\n\nimport Region from './core/classes/Region.js';\nimport Gesture from './gestures/Gesture.js';\nimport Expand from './gestures/Expand.js';\nimport Pan from './gestures/Pan.js';\nimport Pinch from './gestures/Pinch.js';\nimport Rotate from './gestures/Rotate.js';\nimport Swipe from './gestures/Swipe.js';\nimport Tap from './gestures/Tap.js';\n\n/**\n * The global API interface for ZingTouch. Contains a constructor for the\n * Region Object, and constructors for each predefined Gesture.\n * @type {Object}\n * @namespace ZingTouch\n */\nlet ZingTouch = {\n  _regions: [],\n\n  // Constructors\n  Gesture: Gesture,\n  Expand: Expand,\n  Pan: Pan,\n  Pinch: Pinch,\n  Rotate: Rotate,\n  Swipe: Swipe,\n  Tap: Tap,\n  Region: function(element, capture, preventDefault) {\n    let id = ZingTouch._regions.length;\n    let region = new Region(element, capture, preventDefault, id);\n    ZingTouch._regions.push(region);\n    return region;\n  },\n};\n\nexport default ZingTouch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ZingTouch.js","/**\n * @file Region.js\n */\n\nimport Binder from './Binder.js';\nimport Gesture from './../../gestures/Gesture.js';\nimport arbiter from './../arbiter.js';\nimport State from './State.js';\n\n/**\n * Allows the user to specify a region to capture all events to feed ZingTouch\n * into. This can be as narrow as the element itself, or as big as the document\n * itself. The more specific an area, the better performant the overall\n * application will perform. Contains API methods to bind/unbind specific\n * elements to corresponding gestures. Also contains the ability to\n * register/unregister new gestures.\n * @class Region\n */\nclass Region {\n\n  /**\n   * Constructor function for the Region class.\n   * @param {Element} element - The element to capture all\n   *  window events in that region to feed into ZingTouch.\n   * @param {boolean} [capture=false] - Whether the region listens for\n   *  captures or bubbles.\n   * @param {boolean} [preventDefault=true] - Whether the default browser\n   *  functionality should be disabled;\n   * @param {Number} id - The id of the region, assigned by the ZingTouch object\n   */\n  constructor(element, capture, preventDefault, id) {\n    /**\n     * The identifier for the Region. This is assigned by the ZingTouch object\n     * and is used to hash gesture id for uniqueness.\n     * @type {Number}\n     */\n    this.id = id;\n\n    /**\n     * The element being bound to.\n     * @type {Element}\n     */\n    this.element = element;\n\n    /**\n     * Whether the region listens for captures or bubbles.\n     * @type {boolean}\n     */\n    this.capture = (typeof capture !== 'undefined') ? capture : false;\n\n    /**\n     * Boolean to disable browser functionality such as scrolling and zooming\n     * over the region\n     * @type {boolean}\n     */\n    this.preventDefault = (typeof preventDefault !== 'undefined') ?\n      preventDefault : true;\n\n    /**\n     * The internal state object for a Region.\n     * Keeps track of registered gestures, inputs, and events.\n     * @type {State}\n     */\n    this.state = new State(id);\n\n    let eventNames = [];\n    if (window.PointerEvent && !window.TouchEvent) {\n      eventNames = [\n        'pointerdown',\n        'pointermove',\n        'pointerup',\n      ];\n    } else {\n      eventNames = [\n        'mousedown',\n        'mousemove',\n        'mouseup',\n        'touchstart',\n        'touchmove',\n        'touchend',\n      ];\n    }\n\n    // Bind detected browser events to the region element.\n    eventNames.map((name) => {\n      element.addEventListener(name, (e) => {\n        arbiter(e, this);\n      }, this.capture);\n    });\n  }\n\n  /**\n   * Bind an element to a registered/unregistered gesture with\n   * multiple function signatures.\n   * @example\n   * bind(element) - chainable\n   * @example\n   * bind(element, gesture, handler, [capture])\n   * @param {Element} element - The element object.\n   * @param {String|Object} [gesture] - Gesture key, or a Gesture object.\n   * @param {Function} [handler] - The function to execute when an event is\n   *  emitted.\n   * @param {Boolean} [capture] - capture/bubble\n   * @param {Boolean} [bindOnce = false] - Option to bind once and\n   *  only emit the event once.\n   * @return {Object} - a chainable object that has the same function as bind.\n   */\n  bind(element, gesture, handler, capture, bindOnce) {\n    if (!element || (element && !element.tagName)) {\n      throw 'Bind must contain an element';\n    }\n\n    bindOnce = (typeof bindOnce !== 'undefined') ? bindOnce : false;\n    if (!gesture) {\n      return new Binder(element, bindOnce, this.state);\n    } else {\n      this.state.addBinding(element, gesture, handler, capture, bindOnce);\n    }\n  }\n\n  /**\n   * Bind an element and sets up actions to remove the binding once\n   * it has been emitted for the first time.\n   * 1. bind(element) - chainable\n   * 2. bind(element, gesture, handler, [capture])\n   * @param {Element} element - The element object.\n   * @param {String|Object} gesture - Gesture key, or a Gesture object.\n   * @param {Function} handler - The function to execute when an\n   *  event is emitted.\n   * @param {Boolean} capture - capture/bubble\n   * @return {Object} - a chainable object that has the same function as bind.\n   */\n  bindOnce(element, gesture, handler, capture) {\n    this.bind(element, gesture, handler, capture, true);\n  }\n\n  /**\n   * Unbinds an element from either the specified gesture\n   *  or all if no element is specified.\n   * @param {Element} element -The element to remove.\n   * @param {String | Object} [gesture] - A String representing the gesture,\n   *   or the actual object being used.\n   * @return {Array} - An array of Bindings that were unbound to the element;\n   */\n  unbind(element, gesture) {\n    let bindings = this.state.retrieveBindingsByElement(element);\n    let unbound = [];\n\n    bindings.forEach((binding) => {\n      if (gesture) {\n        if (typeof gesture === 'string' &&\n          this.state.registeredGestures[gesture]) {\n          let registeredGesture = this.state.registeredGestures[gesture];\n          if (registeredGesture.id === binding.gesture.id) {\n            element.removeEventListener(\n              binding.gesture.getId(),\n              binding.handler, binding.capture);\n            unbound.push(binding);\n          }\n        }\n      } else {\n        element.removeEventListener(\n          binding.gesture.getId(),\n          binding.handler,\n          binding.capture);\n        unbound.push(binding);\n      }\n    });\n\n    return unbound;\n  }\n\n  /* unbind*/\n\n  /**\n   * Registers a new gesture with an assigned key\n   * @param {String} key - The key used to register an element to that gesture\n   * @param {Gesture} gesture - A gesture object\n   */\n  register(key, gesture) {\n    if (typeof key !== 'string') {\n      throw new Error('Parameter key is an invalid string');\n    }\n\n    if (!gesture instanceof Gesture) {\n      throw new Error('Parameter gesture is an invalid Gesture object');\n    }\n\n    gesture.setType(key);\n    this.state.registerGesture(gesture, key);\n  }\n\n  /* register*/\n\n  /**\n   * Un-registers a gesture from the Region's state such that\n   * it is no longer emittable.\n   * Unbinds all events that were registered with the type.\n   * @param {String|Object} key - Gesture key that was used to\n   *  register the object\n   * @return {Object} - The Gesture object that was unregistered\n   *  or null if it could not be found.\n   */\n  unregister(key) {\n    this.state.bindings.forEach((binding) => {\n      if (binding.gesture.getType() === key) {\n        binding.element.removeEventListener(binding.gesture.getId(),\n          binding.handler, binding.capture);\n      }\n    });\n\n    let registeredGesture = this.state.registeredGestures[key];\n    delete this.state.registeredGestures[key];\n    return registeredGesture;\n  }\n}\n\nexport default Region;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Region.js","/**\n * @file Binder.js\n */\n\n/**\n * A chainable object that contains a single element to be bound upon.\n * Called from ZingTouch.bind(), and is used to chain over gesture callbacks.\n * @class\n */\nclass Binder {\n  /**\n   * Constructor function for the Binder class.\n   * @param {Element} element - The element to bind gestures to.\n   * @param {Boolean} bindOnce - Option to bind once and only emit\n   * the event once.\n   * @param {Object} state - The state of the Region that is being bound to.\n   * @return {Object} - Returns 'this' to be chained over and over again.\n   */\n  constructor(element, bindOnce, state) {\n    /**\n     * The element to bind gestures to.\n     * @type {Element}\n     */\n    this.element = element;\n\n    Object.keys(state.registeredGestures).forEach((key) => {\n      this[key] = (handler, capture) => {\n        state.addBinding(this.element, key, handler, capture, bindOnce);\n        return this;\n      };\n    });\n  }\n\n}\n\nexport default Binder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Binder.js","/**\n * @file Gesture.js\n * Contains the Gesture class\n */\n\nimport util from './../core/util.js';\n\n/**\n * The Gesture class that all gestures inherit from.\n */\nclass Gesture {\n  /**\n   * Constructor function for the Gesture class.\n   * @class Gesture\n   */\n  constructor() {\n    /**\n     * The generic string type of gesture ('expand'|'pan'|'pinch'|\n     *  'rotate'|'swipe'|'tap').\n     * @type {String}\n     */\n    this.type = null;\n\n    /**\n     * The unique identifier for each gesture determined at bind time by the\n     * state object. This allows for distinctions across instance variables of\n     * Gestures that are created on the fly (e.g. Tap-1, Tap-2, etc).\n     * @type {String|null}\n     */\n    this.id = null;\n  }\n\n  /**\n   * Set the type of the gesture to be called during an event\n   * @param {String} type - The unique identifier of the gesture being created.\n   */\n  setType(type) {\n    this.type = type;\n  }\n\n  /**\n   * getType() - Returns the generic type of the gesture\n   * @return {String} - The type of gesture\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Set the id of the gesture to be called during an event\n   * @param {String} id - The unique identifier of the gesture being created.\n   */\n  setId(id) {\n    this.id = id;\n  }\n\n  /**\n   * Return the id of the event. If the id does not exist, return the type.\n   * @return {String}\n   */\n  getId() {\n    return (this.id !== null) ? this.id : this.type;\n  }\n\n  /**\n   * Updates internal properties with new ones, only if the properties exist.\n   * @param {Object} object\n   */\n  update(object) {\n    for (let key in object) {\n      if (this[key]) {\n        this[key] = object[key];\n      }\n    }\n  }\n\n  /**\n   * start() - Event hook for the start of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n\t * @param {Object} state - The state object of the current region.\n\t * @param {Element} element - The element associated to the binding.\n   * @return {null|Object}  - Default of null\n   */\n  start(inputs, state, element) {\n    return null;\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null|Object} - Default of null\n   */\n  move(inputs, state, element) {\n    return null;\n  }\n\n  /**\n   * end() - Event hook for the move of a gesture\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null|Object}  - Default of null\n   */\n  end(inputs) {\n    return null;\n  }\n\n\t/**\n\t* isValid() - Pre-checks to ensure the invariants of a gesture are satisfied.\n\t* @param {Array} inputs - The array of Inputs on the screen\n\t* @param {Object} state - The state object of the current region.\n\t* @param {Element} element - The element associated to the binding.\n\t* @return {boolean} - If the gesture is valid\n\t*/\n\tisValid(inputs, state, element) {\n    let valid = true;\n    // Checks to see if all touches originated from within the target element.\n    if (inputs.length > 1) {\n      inputs.forEach((input) => {\n        if (!util.isInside(input.initial.x, input.initial.y, element)) {\n          valid = false;\n        }\n      });\n    }\n    return valid;\n    }\n\n}\n\nexport default Gesture;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Gesture.js","/**\n * @file util.js\n * Various accessor and mutator functions to handle state and validation.\n */\n\nconst CIRCLE_DEGREES = 360;\nconst HALF_CIRCLE_DEGREES = 180;\n\n/**\n *  Contains generic helper functions\n * @type {Object}\n * @namespace util\n */\nlet util = {\n\n  /**\n   * Normalizes window events to be either of type start, move, or end.\n   * @param {String} type - The event type emitted by the browser\n   * @return {null|String} - The normalized event, or null if it is an\n   * event not predetermined.\n   */\n  normalizeEvent(type) {\n    switch (type) {\n      case 'mousedown' :\n      case 'touchstart' :\n      case 'pointerdown' :\n        return 'start';\n      case 'mousemove' :\n      case 'touchmove' :\n      case 'pointermove' :\n        return 'move';\n      case 'mouseup' :\n      case 'touchend' :\n      case 'pointerup' :\n        return 'end';\n      default :\n        return null;\n    }\n  },\n  /* normalizeEvent*/\n\n  /**\n   * Determines if the current and previous coordinates are within or\n   * up to a certain tolerance.\n   * @param {Number} currentX - Current event's x coordinate\n   * @param {Number} currentY - Current event's y coordinate\n   * @param {Number} previousX - Previous event's x coordinate\n   * @param {Number} previousY - Previous event's y coordinate\n   * @param {Number} tolerance - The tolerance in pixel value.\n   * @return {boolean} - true if the current coordinates are\n   * within the tolerance, false otherwise\n   */\n  isWithin(currentX, currentY, previousX, previousY, tolerance) {\n    return ((Math.abs(currentY - previousY) <= tolerance) &&\n    (Math.abs(currentX - previousX) <= tolerance));\n  },\n  /* isWithin*/\n\n  /**\n   * Calculates the distance between two points.\n   * @param {Number} x0\n   * @param {Number} x1\n   * @param {Number} y0\n   * @param {Number} y1\n   * @return {number} The numerical value between two points\n   */\n  distanceBetweenTwoPoints(x0, x1, y0, y1) {\n    let dist = (Math.sqrt(((x1 - x0) * (x1 - x0)) + ((y1 - y0) * (y1 - y0))));\n    return Math.round(dist * 100) / 100;\n  },\n\n  /**\n   * Calculates the midpoint coordinates between two points.\n   * @param {Number} x0\n   * @param {Number} x1\n   * @param {Number} y0\n   * @param {Number} y1\n   * @return {Object} The coordinates of the midpoint.\n   */\n  getMidpoint(x0, x1, y0, y1) {\n    return {\n      x: ((x0 + x1) / 2),\n      y: ((y0 + y1) / 2),\n    };\n  },\n  /**\n   * Calculates the angle between the projection and an origin point.\n   *   |                (projectionX,projectionY)\n   *   |             /°\n   *   |          /\n   *   |       /\n   *   |    / θ\n   *   | /__________\n   *   ° (originX, originY)\n   * @param {number} originX\n   * @param {number} originY\n   * @param {number} projectionX\n   * @param {number} projectionY\n   * @return {number} - Degree along the unit circle where the project lies\n   */\n  getAngle(originX, originY, projectionX, projectionY) {\n    let angle = Math.atan2(projectionY - originY, projectionX - originX) *\n      ((HALF_CIRCLE_DEGREES) / Math.PI);\n    return CIRCLE_DEGREES - ((angle < 0) ? (CIRCLE_DEGREES + angle) : angle);\n  },\n  /**\n   * Calculates the angular distance in degrees between two angles\n   *  along the unit circle\n   * @param {number} start - The starting point in degrees\n   * @param {number} end - The ending point in degrees\n   * @return {number} The number of degrees between the\n   * starting point and ending point. Negative degrees denote a clockwise\n   * direction, and positive a counter-clockwise direction.\n   */\n  getAngularDistance(start, end) {\n    let angle = (end - start) % CIRCLE_DEGREES;\n    let sign = (angle < 0) ? 1 : -1;\n    angle = Math.abs(angle);\n    return (angle > HALF_CIRCLE_DEGREES) ?\n    sign * (CIRCLE_DEGREES - angle) : sign * angle;\n  },\n\n  /**\n   * Calculates the velocity of pixel/milliseconds between two points\n   * @param {Number} startX\n   * @param {Number} startY\n   * @param {Number} startTime\n   * @param {Number} endX\n   * @param {Number} endY\n   * @param {Number} endTime\n   * @return {Number} velocity of px/time\n   */\n  getVelocity(startX, startY, startTime, endX, endY, endTime) {\n    let distance = this.distanceBetweenTwoPoints(startX, endX, startY, endY);\n    return (distance / (endTime - startTime));\n  },\n\n  /**\n   * Returns the farthest right input\n   * @param {Array} inputs\n   * @return {Object}\n   */\n  getRightMostInput(inputs) {\n    let rightMost = null;\n    let distance = Number.MIN_VALUE;\n    inputs.forEach((input) => {\n      if (input.initial.x > distance) {\n        rightMost = input;\n      }\n    });\n    return rightMost;\n  },\n\n  /**\n   * Determines is the value is an integer and not a floating point\n   * @param {Mixed} value\n   * @return {boolean}\n   */\n  isInteger(value) {\n    return (typeof value === 'number') && (value % 1 === 0);\n  },\n\n  /**\n   * Determines if the x,y position of the input is within then target.\n   * @param {Number} x -clientX\n   * @param {Number} y -clientY\n   * @param {Element} target\n   * @return {Boolean}\n   */\n  isInside(x, y, target) {\n    const rect = target.getBoundingClientRect();\n    return ((x > rect.left && x < rect.left + rect.width) &&\n    (y > rect.top && y < rect.top + rect.height));\n  },\n  /**\n   * Polyfill for event.propagationPath\n   * @param {Event} event\n   * @return {Array}\n   */\n  getPropagationPath(event) {\n    if (event.path) {\n      return event.path;\n    } else {\n      let path = [];\n      let node = event.target;\n      while (node != document) {\n        path.push(node);\n        node = node.parentNode;\n      }\n\n      return path;\n    }\n  },\n\n  /**\n   * Retrieve the index inside the path array\n   * @param {Array} path\n   * @param {Element} element\n   * @return {Element}\n   */\n  getPathIndex(path, element) {\n    let index = path.length;\n\n    path.forEach((obj, i) => {\n      if (obj === element) {\n        index = i;\n      }\n    });\n\n    return index;\n  },\n\n  setMSPreventDefault(element) {\n    element.style['-ms-content-zooming'] = 'none';\n    element.style['touch-action'] = 'none';\n  },\n\n  removeMSPreventDefault(element) {\n    element.style['-ms-content-zooming'] = '';\n    element.style['touch-action'] = '';\n  },\n};\nexport default util;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/util.js","/**\n * @file arbiter.js\n * Contains logic for the dispatcher\n */\n\nimport dispatcher from './dispatcher.js';\nimport interpreter from './interpreter.js';\nimport util from './util.js';\n\n/**\n * Function that handles event flow, negotiating with the interpreter,\n * and dispatcher.\n * 1. Receiving all touch events in the window.\n * 2. Determining which gestures are linked to the target element.\n * 3. Negotiating with the Interpreter what event should occur.\n * 4. Sending events to the dispatcher to emit events to the target.\n * @param {Event} event - The event emitted from the window object.\n * @param {Object} region - The region object of the current listener.\n */\nfunction arbiter(event, region) {\n  const state = region.state;\n\n  /*\n   Return if a gesture is not in progress and won't be. Also catches the case\n   where a previous event is in a partial state (2 finger pan, waits for both\n   inputs to reach touchend)\n   */\n  if (state.inputs.length === 0 && util.normalizeEvent(event.type) !==\n    'start') {\n    return;\n  }\n\n  /*\n   Check for 'stale' or events that lost focus\n   (e.g. a pan goes off screen/off region.)\n   Does not affect mobile devices.\n   */\n  if (typeof event.buttons !== 'undefined' &&\n    util.normalizeEvent(event.type) !== 'end' &&\n    event.buttons === 0) {\n    state.resetInputs();\n    return;\n  }\n\n  // Update the state with the new events. If the event is stopped, return;\n  if (!state.updateInputs(event, region.element)) {\n    return;\n  }\n\n  // Retrieve the initial target from any one of the inputs\n  const bindings = state.retrieveBindingsByInitialPos();\n  if (bindings.length > 0) {\n    if (region.preventDefault) {\n      util.setMSPreventDefault(region.element);\n      event.preventDefault ? event.preventDefault():(event.returnValue = false);\n    } else {\n      util.removeMSPreventDefault(region.element);\n    }\n\n    const toBeDispatched = {};\n    const gestures = interpreter(bindings, event, state);\n\n    /* Determine the deepest path index to emit the event\n     from, to avoid duplicate events being fired. */\n\n    gestures.forEach((gesture) => {\n      const id = gesture.binding.gesture.id;\n      if (toBeDispatched[id]) {\n        const path = util.getPropagationPath(event);\n        if (util.getPathIndex(path, gesture.binding.element) <\n          util.getPathIndex(path, toBeDispatched[id].binding.element)) {\n          toBeDispatched[id] = gesture;\n        }\n      } else {\n        toBeDispatched[id] = gesture;\n      }\n    });\n\n    Object.keys(toBeDispatched).forEach((index) => {\n      const gesture = toBeDispatched[index];\n      dispatcher(gesture.binding, gesture.data, gesture.events);\n    });\n  }\n\n  let endCount = 0;\n  state.inputs.forEach((input) => {\n    if (input.getCurrentEventType() === 'end') {\n      endCount++;\n    }\n  });\n\n  if (endCount === state.inputs.length) {\n    state.resetInputs();\n  }\n}\n\nexport default arbiter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/arbiter.js","/**\n * @file dispatcher.js\n * Contains logic for the dispatcher\n */\n\n/**\n * Emits data at the target element if available, and bubbles up from\n * the target to the parent until the document has been reached.\n * Called from the arbiter.\n * @param {Binding} binding - An object of type Binding\n * @param {Object} data - The metadata computed by the gesture being emitted.\n * @param {Array} events - An array of ZingEvents\n *  corresponding to the inputs on the screen.\n */\nfunction dispatcher(binding, data, events) {\n  data.events = events;\n\n  const newEvent = new CustomEvent(binding.gesture.getId(), {\n    detail: data,\n    bubbles: true,\n    cancelable: true,\n  });\n  emitEvent(binding.element, newEvent, binding);\n}\n\n/**\n * Emits the new event. Unbinds the event if the event was registered\n * at bindOnce.\n * @param {Element} target - Element object to emit the event to.\n * @param {Event} event - The CustomEvent to emit.\n * @param {Binding} binding - An object of type Binding\n */\nfunction emitEvent(target, event, binding) {\n  target.dispatchEvent(event);\n  if (binding.bindOnce) {\n    ZingTouch.unbind(binding.element, binding.gesture.getType());\n  }\n}\n\nexport default dispatcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/dispatcher.js","/**\n * @file interpreter.js\n * Contains logic for the interpreter\n */\n\nimport util from './util.js';\n\n/**\n * Receives an event and an array of Bindings (element -> gesture handler)\n * to determine what event will be emitted. Called from the arbiter.\n * @param {Array} bindings - An array containing Binding objects\n * that associate the element to an event handler.\n * @param {Object} event - The event emitted from the window.\n * @param {Object} state - The state object of the current listener.\n * @return {Object | null} - Returns an object containing a binding and\n * metadata, or null if a gesture will not be emitted.\n */\nfunction interpreter(bindings, event, state) {\n  const evType = util.normalizeEvent(event.type);\n  const candidates = [];\n  bindings.forEach((binding) => {\n    let result = binding.gesture[evType](state.inputs, state, binding.element);\n    if (result) {\n      const events = [];\n      state.inputs.forEach((input) => {\n        events.push(input.current);\n      });\n\n      candidates.push({\n        binding: binding,\n        data: result,\n        events: events,\n      });\n    }\n  });\n\n  return candidates;\n}\n\nexport default interpreter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/interpreter.js","/**\n * @file State.js\n */\n\nimport Gesture from './../../gestures/Gesture.js';\nimport Expand from './../../gestures/Expand.js';\nimport Pan from './../../gestures/Pan.js';\nimport Pinch from './../../gestures/Pinch.js';\nimport Rotate from './../../gestures/Rotate.js';\nimport Swipe from './../../gestures/Swipe.js';\nimport Tap from './../../gestures/Tap.js';\nimport Binding from './Binding.js';\nimport Input from './Input.js';\nimport util from './../util.js';\n\nconst DEFAULT_MOUSE_ID = 0;\n\n/**\n * Creates an object related to a Region's state,\n * and contains helper methods to update and clean up different states.\n */\nclass State {\n\n  /**\n   * Constructor for the State class.\n   * @param {String} regionId - The id the region this state is bound to.\n   */\n  constructor(regionId) {\n    /**\n     * The id for the region this state is bound to.\n     * @type {String}\n     */\n    this.regionId = regionId;\n\n    /**\n     * An array of current and recently inactive\n     *  Input objects related to a gesture.\n     * @type {Input}\n     */\n    this.inputs = [];\n\n    /**\n     * An array of Binding objects; The list of relations between elements,\n     *   their gestures, and the handlers.\n     * @type {Binding}\n     */\n    this.bindings = [];\n\n    /**\n     * The number of gestures that have been registered with this state\n     * @type {Number}\n     */\n    this.numGestures = 0;\n\n    /**\n     * A key/value map all the registered gestures for the listener.\n     *  Note: Can only have one gesture registered to one key.\n     * @type {Object}\n     */\n    this.registeredGestures = {};\n\n    this.registerGesture(new Expand(), 'expand');\n    this.registerGesture(new Pan(), 'pan');\n    this.registerGesture(new Rotate(), 'rotate');\n    this.registerGesture(new Pinch(), 'pinch');\n    this.registerGesture(new Swipe(), 'swipe');\n    this.registerGesture(new Tap(), 'tap');\n  }\n\n  /**\n   * Creates a new binding with the given element and gesture object.\n   * If the gesture object provided is unregistered, it's reference\n   * will be saved in as a binding to be later referenced.\n   * @param  {Element} element - The element the gesture is bound to.\n   * @param {String|Object} gesture  - Either a name of a registered gesture,\n   *  or an unregistered  Gesture object.\n   * @param {Function} handler - The function handler to be called\n   *  when the event is emitted. Used to bind/unbind.\n   * @param {Boolean} capture - Whether the gesture is to be\n   *  detected in the capture of bubble phase. Used to bind/unbind.\n   * @param {Boolean} bindOnce - Option to bind once and\n   *  only emit the event once.\n   */\n  addBinding(element, gesture, handler, capture, bindOnce) {\n    let boundGesture;\n\n    // Error type checking.\n    if (element && typeof element.tagName === 'undefined') {\n      throw new Error('Parameter element is an invalid object.');\n    }\n\n    if (typeof handler !== 'function') {\n      throw new Error('Parameter handler is invalid.');\n    }\n\n    if (typeof gesture === 'string' &&\n      Object.keys(this.registeredGestures).indexOf(gesture) === -1) {\n      throw new Error('Parameter ' + gesture + ' is not a registered gesture');\n    } else if (typeof gesture === 'object' && !(gesture instanceof Gesture)) {\n      throw new Error('Parameter for the gesture is not of a Gesture type');\n    }\n\n    if (typeof gesture === 'string') {\n      boundGesture = this.registeredGestures[gesture];\n    } else {\n      boundGesture = gesture;\n      if (boundGesture.id === '') {\n        this.assignGestureId(boundGesture);\n      }\n    }\n\n    this.bindings.push(new Binding(element, boundGesture,\n      handler, capture, bindOnce));\n    element.addEventListener(boundGesture.getId(), handler, capture);\n  }\n\n  /**\n   * Retrieves the Binding by which an element is associated to.\n   * @param {Element} element - The element to find bindings to.\n   * @return {Array} - An array of Bindings to which that element is bound\n   */\n  retrieveBindingsByElement(element) {\n    let matches = [];\n    this.bindings.map((binding) => {\n      if (binding.element === element) {\n        matches.push(binding);\n      }\n    });\n    return matches;\n  }\n\n  /**\n   * Retrieves all bindings based upon the initial X/Y position of the inputs.\n   * e.g. if gesture started on the correct target element,\n   *  but diverted away into the correct region, this would still be valid.\n   * @return {Array} - An array of Bindings to which that element is bound\n   */\n  retrieveBindingsByInitialPos() {\n    let matches = [];\n    this.bindings.forEach((binding) => {\n      // Determine if at least one input is in the target element.\n      // They should all be in the region based upon a prior check\n      let inputsInside = this.inputs.filter((input) => {\n        return util.isInside(input.initial.x, input.initial.y, binding.element);\n      });\n      if (inputsInside.length > 0) {\n        matches.push(binding);\n      }\n    });\n    return matches;\n  }\n\n  /**\n   * Updates the inputs with new information based upon a new event being fired.\n   * @param {Event} event - The event being captured.\n   * @param {Element} regionElement - The element where\n   *  this current Region is bound to.\n   * @return {boolean} - returns true for a successful update,\n   *  false if the event is invalid.\n   */\n  updateInputs(event, regionElement) {\n    let identifier = DEFAULT_MOUSE_ID;\n    let eventType = (event.touches) ?\n      'TouchEvent' : (event.pointerType) ? 'PointerEvent' : 'MouseEvent';\n    switch (eventType) {\n      case 'TouchEvent':\n\n        for (let index in event.changedTouches) {\n          if (event.changedTouches.hasOwnProperty(index) &&\n            util.isInteger((parseInt(index)))) {\n            identifier = event.changedTouches[index].identifier;\n            update(event, this, identifier, regionElement);\n          }\n        }\n        break;\n\n      case 'PointerEvent':\n        identifier = event.pointerId;\n        update(event, this, identifier, regionElement);\n        break;\n\n      case 'MouseEvent':\n      default:\n        update(event, this, DEFAULT_MOUSE_ID, regionElement);\n        break;\n    }\n    return true;\n\n    function update(event, state, identifier, regionElement) {\n      let eventType = util.normalizeEvent(event.type);\n      let input = findInputById(state.inputs, identifier);\n\n      // A starting input was not cleaned up properly and still exists.\n      if (eventType === 'start' && input) {\n        state.resetInputs();\n        return;\n      }\n\n      // An input has moved outside the region.\n      if (eventType !== 'start' &&\n        input &&\n        !util.isInside(input.current.x, input.current.y, regionElement)) {\n         state.resetInputs();\n        return;\n      }\n\n      if (eventType !== 'start' && !input) {\n        state.resetInputs();\n        return;\n      }\n\n      if (eventType === 'start') {\n        state.inputs.push(new Input(event, identifier));\n      } else {\n        input.update(event, identifier);\n      }\n    }\n  }\n\n  /**\n   * Removes all inputs from the state, allowing for a new gesture.\n   */\n  resetInputs() {\n    this.inputs = [];\n  }\n\n  /**\n   * Counts the number of active inputs at any given time.\n   * @return {Number} - The number of active inputs.\n   */\n  numActiveInputs() {\n    let endType = this.inputs.filter((input) => {\n      return input.current.type !== 'end';\n    });\n    return endType.length;\n  }\n\n  /**\n   * Register the gesture to the current region.\n   * @param {Object} gesture - The gesture to register\n   * @param {String} key - The key to define the new gesture as.\n   */\n  registerGesture(gesture, key) {\n    this.assignGestureId(gesture);\n    this.registeredGestures[key] = gesture;\n  }\n\n  /**\n   * Tracks the gesture to this state object to become uniquely identifiable.\n   * Useful for nested Regions.\n   * @param {Gesture} gesture - The gesture to track\n   */\n  assignGestureId(gesture) {\n    gesture.setId(this.regionId + '-' + this.numGestures++);\n  }\n\n}\n/**\n * Searches through each input, comparing the browser's identifier key\n *  for touches, to the stored one in each input\n * @param {Array} inputs - The array of inputs in state.\n * @param {String} identifier - The identifier the browser has assigned.\n * @return {Input} - The input object with the corresponding identifier,\n *  null if it did not find any.\n */\nfunction findInputById(inputs, identifier) {\n  for (let i = 0; i < inputs.length; i++) {\n    if (inputs[i].identifier === identifier) {\n      return inputs[i];\n    }\n  }\n\n  return null;\n}\n\nexport default State;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/State.js","/**\n * @file Expand.js\n * Contains the Expand class\n */\n\nimport Distance from './Distance.js';\n\n/**\n * An Expand is defined as two inputs moving farther away from each other.\n * This gesture does not account for any start/end events to allow for the\n * event to interact with the Pan and Pinch events.\n * @class Expand\n */\nclass Expand extends Distance {\n\n  /**\n   * Constructor function for the Expand class.\n   * @param {object} options\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'expand';\n  }\n\n}\n\nexport default Expand;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Expand.js","/**\n * @file Distance.js\n * Contains the abstract Distance class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 2;\nconst DEFAULT_MIN_THRESHOLD = 1;\n\n/**\n * A Distance is defined as two inputs moving either together or apart.\n * @class Distance\n */\nclass Distance extends Gesture {\n  /**\n   * Constructor function for the Distance class.\n   * @param {Object} options\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'distance';\n\n    /**\n     * The minimum amount in pixels the inputs must move until it is fired.\n     * @type {Number}\n     */\n    this.threshold = (options && options.threshold) ?\n      options.threshold : DEFAULT_MIN_THRESHOLD;\n  }\n\n  /**\n   * Event hook for the start of a gesture. Initialized the lastEmitted\n   * gesture and stores it in the first input for reference events.\n   * @param {Array} inputs\n   */\n  start(inputs, state, element) {\n  if(!this.isValid(inputs, state, element)) {\n    return null;\n  }\n    if (inputs.length === DEFAULT_INPUTS) {\n      // Store the progress in the first input.\n      let progress = inputs[0].getGestureProgress(this.type);\n      progress.lastEmittedDistance = util.distanceBetweenTwoPoints(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n    }\n  }\n\n  /**\n   * Event hook for the move of a gesture.\n   *  Determines if the two points are moved in the expected direction relative\n   *  to the current distance and the last distance.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {Object | null} - Returns the distance in pixels between two inputs\n   */\n  move(inputs, state, element) {\n    if (state.numActiveInputs() === DEFAULT_INPUTS) {\n      let currentDistance = util.distanceBetweenTwoPoints(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n      let lastDistance = util.distanceBetweenTwoPoints(\n        inputs[0].previous.x,\n        inputs[1].previous.x,\n        inputs[0].previous.y,\n        inputs[1].previous.y);\n\n      const centerPoint = util.getMidpoint(\n        inputs[0].current.x,\n        inputs[1].current.x,\n        inputs[0].current.y,\n        inputs[1].current.y);\n\n      // Retrieve the first input's progress.\n      let progress = inputs[0].getGestureProgress(this.type);\n\n      if (this.constructor.name === 'Expand') {\n        if (currentDistance < lastDistance) {\n          progress.lastEmittedDistance = currentDistance;\n        } else if ((currentDistance - progress.lastEmittedDistance >=\n          this.threshold)) {\n          progress.lastEmittedDistance = currentDistance;\n          return {\n            distance: currentDistance,\n            center: centerPoint,\n          };\n        }\n      } else {\n        if (currentDistance > lastDistance) {\n          progress.lastEmittedDistance = currentDistance;\n        } else if (currentDistance < lastDistance &&\n          (progress.lastEmittedDistance - currentDistance >= this.threshold)) {\n          progress.lastEmittedDistance = currentDistance;\n          return {\n            distance: currentDistance,\n            center: centerPoint,\n          };\n        }\n      }\n\n      return null;\n    }\n  }\n}\n\nexport default Distance;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Distance.js","/**\n * @file Pan.js\n * Contains the Pan class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MIN_THRESHOLD = 1;\n\n/**\n * A Pan is defined as a normal movement in any direction on a screen.\n * Pan gestures do not track start events and can interact with pinch and \\\n *  expand gestures.\n * @class Pan\n */\nclass Pan extends Gesture {\n  /**\n   * Constructor function for the Pan class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.numInputs=1] - Number of inputs for the\n   *  Pan gesture.\n   * @param {Number} [options.threshold=1] - The minimum number of\n   * pixels the input has to move to trigger this gesture.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'pan';\n\n    /**\n     * The number of inputs to trigger a Pan can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * The minimum amount in pixels the pan must move until it is fired.\n     * @type {Number}\n     */\n    this.threshold = (options && options.threshold) ?\n      options.threshold : DEFAULT_MIN_THRESHOLD;\n  }\n\n  /**\n   * Event hook for the start of a gesture. Marks each input as active,\n   * so it can invalidate any end events.\n   * @param {Array} inputs\n   */\n  start(inputs) {\n    inputs.forEach((input) => {\n      let progress = input.getGestureProgress(this.getId());\n      progress.active = true;\n      progress.lastEmitted = {\n        x: input.current.x,\n        y: input.current.y,\n      };\n    });\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture.\n   * Fired whenever the input length is met, and keeps a boolean flag that\n   * the gesture has fired at least once.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {Object} - Returns the distance in pixels between the two inputs.\n   */\n  move(inputs, state, element) {\n    if (this.numInputs === inputs.length) {\n      var output = {\n        data: [],\n      };\n      for (let i = 0; i < inputs.length; i++) {\n        let progress = inputs[i].getGestureProgress(this.getId());\n\n        let reachedThreshold = false;\n\n        // Check threshold distance\n        const yThreshold = Math.abs(inputs[i].current.y -\n            progress.lastEmitted.y) > this.threshold;\n        const xThreshold = Math.abs(inputs[i].current.x -\n            progress.lastEmitted.x) > this.threshold;\n        reachedThreshold = yThreshold || xThreshold;\n\n        if (progress.active && reachedThreshold) {\n          output.data[i] = {\n            distanceFromOrigin: util.distanceBetweenTwoPoints(\n              inputs[i].initial.x,\n              inputs[i].current.x,\n              inputs[i].initial.y,\n              inputs[i].current.y),\n            directionFromOrigin: util.getAngle(\n              inputs[i].initial.x,\n              inputs[i].initial.y,\n              inputs[i].current.x,\n              inputs[i].current.y),\n            currentDirection: util.getAngle(\n              progress.lastEmitted.x,\n              progress.lastEmitted.y,\n              inputs[i].current.x,\n              inputs[i].current.y),\n          };\n          progress.lastEmitted.x = inputs[i].current.x;\n          progress.lastEmitted.y = inputs[i].current.y;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return output;\n  }\n\n  /* move*/\n\n  /**\n   * end() - Event hook for the end of a gesture. If the gesture has at least\n   * fired once, then it ends on the first end event such that any remaining\n   * inputs will not trigger the event until all inputs have reached the\n   * touchend event. Any touchend->touchstart events that occur before all\n   * inputs are fully off the screen should not fire.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null} - null if the gesture is not to be emitted,\n   *  Object with information otherwise.\n   */\n  end(inputs) {\n    inputs.forEach((input) => {\n      let progress = input.getGestureProgress(this.getId());\n      progress.active = false;\n    });\n    return null;\n  }\n\n  /* end*/\n}\n\nexport default Pan;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Pan.js","/**\n * @file Pinch.js\n * Contains the Pinch class\n */\n\nimport Distance from './Distance.js';\nimport util from './../core/util.js';\n\n/**\n * An Pinch is defined as two inputs moving closer to each other.\n * This gesture does not account for any start/end events to allow for the event\n * to interact with the Pan and Pinch events.\n * @class Pinch\n */\nclass Pinch extends Distance {\n  /**\n   * Constructor function for the Pinch class.\n   * @param {Object} options\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'pinch';\n  }\n\n}\n\nexport default Pinch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Pinch.js","/**\n * @file Rotate.js\n * Contains the Rotate class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst MAX_INPUTS = 2;\n\n/**\n * A Rotate is defined as two inputs moving about a circle,\n * maintaining a relatively equal radius.\n * @class Rotate\n */\nclass Rotate extends Gesture {\n  /**\n   * Constructor function for the Rotate class.\n   */\n  constructor() {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'rotate';\n  }\n\n  /**\n   * move() - Event hook for the move of a gesture. Obtains the midpoint of two\n   * the two inputs and calculates the projection of the right most input along\n   * a unit circle to obtain an angle. This angle is compared to the previously\n   * calculated angle to output the change of distance, and is compared to the\n   * initial angle to output the distance from the initial angle to the current\n   * angle.\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @param {Object} state - The state object of the current listener.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - null if this event did not occur\n   * @return {Object} obj.angle - The current angle along the unit circle\n   * @return {Object} obj.distanceFromOrigin - The angular distance travelled\n   * from the initial right most point.\n   * @return {Object} obj.distanceFromLast - The change of angle between the\n   * last position and the current position.\n   */\n  move(inputs, state, element) {\n    if (state.numActiveInputs() <= MAX_INPUTS) {\n      let referencePivot;\n      let diffX;\n      let diffY;\n      let input;\n      if (state.numActiveInputs() === 1) {\n        let bRect = element.getBoundingClientRect();\n        referencePivot = {\n          x: bRect.left + bRect.width / 2,\n          y: bRect.top + bRect.height / 2,\n        };\n        input = inputs[0];\n        diffX = diffY = 0;\n      } else {\n        referencePivot = util.getMidpoint(\n          inputs[0].initial.x,\n          inputs[1].initial.x,\n          inputs[0].initial.y,\n          inputs[1].initial.y);\n        let currentPivot = util.getMidpoint(\n          inputs[0].current.x,\n          inputs[1].current.x,\n          inputs[0].current.y,\n          inputs[1].current.y);\n        diffX = referencePivot.x - currentPivot.x;\n        diffY = referencePivot.y - currentPivot.y;\n        input = util.getRightMostInput(inputs);\n      }\n\n      // Translate the current pivot point.\n      let currentAngle = util.getAngle(referencePivot.x, referencePivot.y,\n        input.current.x + diffX, input.current.y + diffY);\n\n      let progress = input.getGestureProgress(this.getId());\n      if (!progress.initialAngle) {\n        progress.initialAngle = progress.previousAngle = currentAngle;\n        progress.distance = progress.change = 0;\n      } else {\n        progress.change = util.getAngularDistance(\n          progress.previousAngle,\n          currentAngle);\n        progress.distance = progress.distance + progress.change;\n      }\n\n      progress.previousAngle = currentAngle;\n\n      return {\n        angle: currentAngle,\n        distanceFromOrigin: progress.distance,\n        distanceFromLast: progress.change,\n      };\n    }\n\n    return null;\n  }\n\n  /* move*/\n}\n\nexport default Rotate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Rotate.js","/**\n * @file Swipe.js\n * Contains the Swipe class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MAX_REST_TIME = 100;\nconst DEFAULT_ESCAPE_VELOCITY = 0.2;\nconst DEFAULT_TIME_DISTORTION = 100;\nconst DEFAULT_MAX_PROGRESS_STACK = 10;\n\n/**\n * A swipe is defined as input(s) moving in the same direction in an relatively\n * increasing velocity and leaving the screen at some point before it drops\n * below it's escape velocity.\n * @class Swipe\n */\nclass Swipe extends Gesture {\n\n  /**\n   * Constructor function for the Swipe class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.numInputs] - The number of inputs to trigger a\n   * Swipe can be variable, and the maximum number being a factor of the browser\n   *  move and current move events.\n   * @param {Number} [options.maxRestTime] - The maximum resting time a point\n   *  has between it's last\n   * @param {Number} [options.escapeVelocity] - The minimum velocity the input\n   *  has to be at to emit a swipe.\n   * @param {Number} [options.timeDistortion] - (EXPERIMENTAL) A value of time\n   *  in milliseconds to distort between events.\n   * @param {Number} [options.maxProgressStack] - (EXPERIMENTAL)The maximum\n   *  amount of move events to keep\n   * track of for a swipe.\n   */\n  constructor(options) {\n    super();\n    /**\n     * The type of the Gesture\n     * @type {String}\n     */\n    this.type = 'swipe';\n\n    /**\n     * The number of inputs to trigger a Swipe can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * The maximum resting time a point has between it's last move and\n     * current move events.\n     * @type {Number}\n     */\n    this.maxRestTime = (options && options.maxRestTime) ?\n      options.maxRestTime : DEFAULT_MAX_REST_TIME;\n\n    /**\n     * The minimum velocity the input has to be at to emit a swipe.\n     * This is useful for determining the difference between\n     * a swipe and a pan gesture.\n     * @type {number}\n     */\n    this.escapeVelocity = (options && options.escapeVelocity) ?\n      options.escapeVelocity : DEFAULT_ESCAPE_VELOCITY;\n\n    /**\n     * (EXPERIMENTAL) A value of time in milliseconds to distort between events.\n     * Browsers do not accurately measure time with the Date constructor in\n     * milliseconds, so consecutive events sometimes display the same timestamp\n     * but different x/y coordinates. This will distort a previous time\n     * in such cases by the timeDistortion's value.\n     * @type {number}\n     */\n    this.timeDistortion = (options && options.timeDistortion) ?\n      options.timeDistortion : DEFAULT_TIME_DISTORTION;\n\n    /**\n     * (EXPERIMENTAL) The maximum amount of move events to keep track of for a\n     * swipe. This helps give a more accurate estimate of the user's velocity.\n     * @type {number}\n     */\n    this.maxProgressStack = (options && options.maxProgressStack) ?\n      options.maxProgressStack : DEFAULT_MAX_PROGRESS_STACK;\n  }\n\n  /**\n   * Event hook for the move of a gesture. Captures an input's x/y coordinates\n   * and the time of it's event on a stack.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - Swipe does not emit from a move.\n   */\n  move(inputs, state, element) {\n    if (this.numInputs === inputs.length) {\n      for (let i = 0; i < inputs.length; i++) {\n        let progress = inputs[i].getGestureProgress(this.getId());\n        if (!progress.moves) {\n          progress.moves = [];\n        }\n\n        progress.moves.push({\n          time: new Date().getTime(),\n          x: inputs[i].current.x,\n          y: inputs[i].current.y,\n        });\n\n        if (progress.length > this.maxProgressStack) {\n          progress.moves.shift();\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /* move*/\n\n  /**\n   * Determines if the input's history validates a swipe motion.\n   * Determines if it did not come to a complete stop (maxRestTime), and if it\n   * had enough of a velocity to be considered (ESCAPE_VELOCITY).\n   * @param {Array} inputs - The array of Inputs on the screen\n   * @return {null|Object} - null if the gesture is not to be emitted,\n   *  Object with information otherwise.\n   */\n  end(inputs) {\n    if (this.numInputs === inputs.length) {\n      let output = {\n        data: [],\n      };\n\n      for (var i = 0; i < inputs.length; i++) {\n        // Determine if all input events are on the 'end' event.\n        if (inputs[i].current.type !== 'end') {\n          return;\n        }\n\n        let progress = inputs[i].getGestureProgress(this.getId());\n        if (progress.moves && progress.moves.length > 2) {\n          // CHECK : Return if the input has not moved in maxRestTime ms.\n\n          let currentMove = progress.moves.pop();\n          if ((new Date().getTime()) - currentMove.time > this.maxRestTime) {\n            return null;\n          }\n\n          let lastMove;\n          let index = progress.moves.length - 1;\n\n          /* Date is unreliable, so we retrieve the last move event where\n           the time is not the same. */\n          while (index !== -1) {\n            if (progress.moves[index].time !== currentMove.time) {\n              lastMove = progress.moves[index];\n              break;\n            }\n\n            index--;\n          }\n\n          /* If the date is REALLY unreliable, we apply a time distortion\n           to the last event.\n           */\n          if (!lastMove) {\n            lastMove = progress.moves.pop();\n            lastMove.time += this.timeDistortion;\n          }\n\n          var velocity = util.getVelocity(lastMove.x, lastMove.y, lastMove.time,\n            currentMove.x, currentMove.y, currentMove.time);\n\n          output.data[i] = {\n            velocity: velocity,\n            distance: util.distanceBetweenTwoPoints(lastMove.x, currentMove.x, lastMove.y, currentMove.y),\n            duration:  currentMove.time - lastMove.time,\n            currentDirection: util.getAngle(\n              lastMove.x,\n              lastMove.y,\n              currentMove.x,\n              currentMove.y),\n          };\n        }\n      }\n\n      for (var i = 0; i < output.data.length; i++) {\n        if (velocity < this.escapeVelocity) {\n          return null;\n        }\n      }\n\n      if (output.data.length > 0) {\n        return output;\n      }\n    }\n\n    return null;\n  }\n\n  /* end*/\n}\n\nexport default Swipe;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Swipe.js","/**\n * @file Tap.js\n * Contains the Tap class\n */\n\nimport Gesture from './Gesture.js';\nimport util from './../core/util.js';\n\nconst DEFAULT_MIN_DELAY_MS = 0;\nconst DEFAULT_MAX_DELAY_MS = 300;\nconst DEFAULT_INPUTS = 1;\nconst DEFAULT_MOVE_PX_TOLERANCE = 10;\n\n/**\n * A Tap is defined as a touchstart to touchend event in quick succession.\n * @class Tap\n */\nclass Tap extends Gesture {\n  /**\n   * Constructor function for the Tap class.\n   * @param {Object} [options] - The options object.\n   * @param {Number} [options.minDelay=0] - The minimum delay between a\n   * touchstart and touchend can be configured in milliseconds.\n   * @param {Number} [options.maxDelay=300] - The maximum delay between a\n   * touchstart and touchend can be configured in milliseconds.\n   * @param {Number} [options.numInputs=1] - Number of inputs for Tap gesture.\n   * @param {Number} [options.tolerance=10] - The tolerance in pixels\n   *  a user can move.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * The type of the Gesture.\n     * @type {String}\n     */\n    this.type = 'tap';\n\n    /**\n     * The minimum amount between a touchstart and a touchend can be configured\n     * in milliseconds. The minimum delay starts to count down when the expected\n     * number of inputs are on the screen, and ends when ALL inputs are off the\n     * screen.\n     * @type {Number}\n     */\n    this.minDelay = (options && options.minDelay) ?\n      options.minDelay : DEFAULT_MIN_DELAY_MS;\n\n    /**\n     * The maximum delay between a touchstart and touchend can be configured in\n     * milliseconds. The maximum delay starts to count down when the expected\n     * number of inputs are on the screen, and ends when ALL inputs are off the\n     * screen.\n     * @type {Number}\n     */\n    this.maxDelay = (options && options.maxDelay) ?\n      options.maxDelay : DEFAULT_MAX_DELAY_MS;\n\n    /**\n     * The number of inputs to trigger a Tap can be variable,\n     * and the maximum number being a factor of the browser.\n     * @type {Number}\n     */\n    this.numInputs = (options && options.numInputs) ?\n      options.numInputs : DEFAULT_INPUTS;\n\n    /**\n     * A move tolerance in pixels allows some slop between a user's start to end\n     * events. This allows the Tap gesture to be triggered more easily.\n     * @type {number}\n     */\n    this.tolerance = (options && options.tolerance) ?\n      options.tolerance : DEFAULT_MOVE_PX_TOLERANCE;\n  }\n\n  /* constructor*/\n\n  /**\n   * Event hook for the start of a gesture. Keeps track of when the inputs\n   * trigger the start event.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @return {null} - Tap does not trigger on a start event.\n   */\n  start(inputs) {\n    if (inputs.length === this.numInputs) {\n      inputs.forEach((input) => {\n        let progress = input.getGestureProgress(this.type);\n        progress.start = new Date().getTime();\n      });\n    }\n\n    return null;\n  }\n\n  /* start*/\n\n  /**\n   * Event hook for the move of a gesture. The Tap event reaches here if the\n   * user starts to move their input before an 'end' event is reached.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @param {Object} state - The state object of the current region.\n   * @param {Element} element - The element associated to the binding.\n   * @return {null} - Tap does not trigger on a move event.\n   */\n  move(inputs, state, element) {\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].getCurrentEventType() === 'move') {\n        let current = inputs[i].current;\n        let previous = inputs[i].previous;\n        if (!util.isWithin(\n            current.x,\n            current.y,\n            previous.x,\n            previous.y,\n            this.tolerance)) {\n          let type = this.type;\n          inputs.forEach(function(input) {\n            input.resetProgress(type);\n          });\n\n          return null;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /* move*/\n\n  /**\n   * Event hook for the end of a gesture.\n   * Determines if this the tap event can be fired if the delay and tolerance\n   * constraints are met. Also waits for all of the inputs to be off the screen\n   * before determining if the gesture is triggered.\n   * @param {Array} inputs - The array of Inputs on the screen.\n   * @return {null|Object} - null if the gesture is not to be emitted,\n   * Object with information otherwise. Returns the interval time between start\n   * and end events.\n   */\n  end(inputs) {\n    if (inputs.length !== this.numInputs) {\n      return null;\n    }\n\n    let startTime = Number.MAX_VALUE;\n    for (let i = 0; i < inputs.length; i++) {\n      if (inputs[i].getCurrentEventType() !== 'end') {\n        return null;\n      }\n\n      let progress = inputs[i].getGestureProgress(this.type);\n      if (!progress.start) {\n        return null;\n      }\n\n      // Find the most recent input's startTime\n      if (progress.start < startTime) {\n        startTime = progress.start;\n      }\n    }\n\n    let interval = new Date().getTime() - startTime;\n    if ((this.minDelay <= interval) && (this.maxDelay >= interval)) {\n      return {\n        interval: interval,\n      };\n    } else {\n      let type = this.type;\n      inputs.forEach(function(input) {\n        input.resetProgress(type);\n      });\n\n      return null;\n    }\n  }\n\n  /* end*/\n}\n\nexport default Tap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gestures/Tap.js","/**\n * @file Binding.js\n */\n\n/**\n * Responsible for creating a binding between an element and a gesture.\n * @class Binding\n */\nclass Binding {\n  /**\n   * Constructor function for the Binding class.\n   * @param {Element} element - The element to associate the gesture to.\n   * @param {Gesture} gesture - A instance of the Gesture type.\n   * @param {Function} handler - The function handler to execute when a\n   * gesture is recognized\n   * on the associated element.\n   * @param {Boolean} [capture=false] - A boolean signifying if the event is\n   * to be emitted during\n   * the capture or bubble phase.\n   * @param {Boolean} [bindOnce=false] - A boolean flag\n   * used for the bindOnce syntax.\n   */\n  constructor(element, gesture, handler, capture, bindOnce) {\n    /**\n     * The element to associate the gesture to.\n     * @type {Element}\n     */\n    this.element = element;\n    /**\n     * A instance of the Gesture type.\n     * @type {Gesture}\n     */\n    this.gesture = gesture;\n    /**\n     * The function handler to execute when a gesture is\n     * recognized on the associated element.\n     * @type {Function}\n     */\n    this.handler = handler;\n\n    /**\n     * A boolean signifying if the event is to be\n     * emitted during the capture or bubble phase.\n     * @type {Boolean}\n     */\n    this.capture = (typeof capture !== 'undefined') ? capture : false;\n\n    /**\n     * A boolean flag used for the bindOnce syntax.\n     * @type {Boolean}\n     */\n    this.bindOnce = (typeof bindOnce !== 'undefined') ? bindOnce : false;\n  }\n\n}\n\nexport default Binding;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Binding.js","/**\n * @file Input.js\n */\n\nimport ZingEvent from './ZingEvent.js';\n\n/**\n * Tracks a single input and contains information about the\n * current, previous, and initial events.\n * Contains the progress of each Input and it's associated gestures.\n * @class Input\n */\nclass Input {\n\n  /**\n   * Constructor function for the Input class.\n   * @param {Event} event - The Event object from the window\n   * @param {Number} [identifier=0] - The identifier for each input event\n   * (taken from event.changedTouches)\n   */\n  constructor(event, identifier) {\n    let currentEvent = new ZingEvent(event, identifier);\n\n    /**\n     * Holds the initial event object. A touchstart/mousedown event.\n     * @type {ZingEvent}\n     */\n    this.initial = currentEvent;\n\n    /**\n     * Holds the most current event for this Input, disregarding any other past,\n     * current, and future events that other Inputs participate in.\n     * e.g. This event ended in an 'end' event, but another Input is still\n     * participating in events -- this will not be updated in such cases.\n     * @type {ZingEvent}\n     */\n    this.current = currentEvent;\n\n    /**\n     * Holds the previous event that took place.\n     * @type {ZingEvent}\n     */\n    this.previous = currentEvent;\n\n    /**\n     * Refers to the event.touches index, or 0 if a simple mouse event occurred.\n     * @type {Number}\n     */\n    this.identifier = (typeof identifier !== 'undefined') ? identifier : 0;\n\n    /**\n     * Stores internal state between events for\n     * each gesture based off of the gesture's id.\n     * @type {Object}\n     */\n    this.progress = {};\n  }\n\n  /**\n   * Receives an input, updates the internal state of what the input has done.\n   * @param {Event} event - The event object to wrap with a ZingEvent.\n   * @param {Number} touchIdentifier - The index of inputs, from event.touches\n   */\n  update(event, touchIdentifier) {\n    this.previous = this.current;\n    this.current = new ZingEvent(event, touchIdentifier);\n  }\n\n  /**\n   * Returns the progress of the specified gesture.\n   * @param {String} id - The identifier for each unique Gesture's progress.\n   * @return {Object} - The progress of the gesture.\n   * Creates an empty object if no progress has begun.\n   */\n  getGestureProgress(id) {\n    if (!this.progress[id]) {\n      this.progress[id] = {};\n    }\n    return this.progress[id];\n  }\n\n  /**\n   * Returns the normalized current Event's type.\n   * @return {String} The current event's type ( start | move | end )\n   */\n  getCurrentEventType() {\n    return this.current.type;\n  }\n\n  /**\n   * Resets a progress/state object of the specified gesture.\n   * @param {String} id - The identifier of the specified gesture\n   */\n  resetProgress(id) {\n    this.progress[id] = {};\n  }\n\n}\n\nexport default Input;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/Input.js","/**\n * @file ZingEvent.js\n * Contains logic for ZingEvents\n */\n\nimport util from '../util.js';\n\nconst INITIAL_COORDINATE = 0;\n/**\n * An event wrapper that normalizes events across browsers and input devices\n * @class ZingEvent\n */\nclass ZingEvent {\n  /**\n   * @constructor\n   * @param {Event} event - The event object being wrapped.\n   * @param {Array} event.touches - The number of touches on\n   *  a screen (mobile only).\n   * @param {Object} event.changedTouches - The TouchList representing\n   * points that participated in the event.\n   * @param {Number} touchIdentifier - The index of touch if applicable\n   */\n  constructor(event, touchIdentifier) {\n    /**\n     * The original event object.\n     * @type {Event}\n     */\n    this.originalEvent = event;\n\n    /**\n     * The type of event or null if it is an event not predetermined.\n     * @see util.normalizeEvent\n     * @type {String | null}\n     */\n    this.type = util.normalizeEvent(event.type);\n\n    /**\n     * The X coordinate for the event, based off of the client.\n     * @type {number}\n     */\n    this.x = INITIAL_COORDINATE;\n\n    /**\n     * The Y coordinate for the event, based off of the client.\n     * @type {number}\n     */\n    this.y = INITIAL_COORDINATE;\n\n    let eventObj;\n    if (event.touches && event.changedTouches) {\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        if (event.changedTouches[i].identifier === touchIdentifier) {\n          eventObj = event.changedTouches[i];\n          break;\n        }\n      }\n    } else {\n      eventObj = event;\n    }\n\n    this.x = this.clientX = eventObj.clientX;\n    this.y = this.clientY = eventObj.clientY;\n\n    this.pageX = eventObj.pageX;\n    this.pageY = eventObj.pageY;\n\n    this.screenX = eventObj.screenX;\n    this.screenY = eventObj.screenY;\n  }\n}\n\nexport default ZingEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/classes/ZingEvent.js"],"sourceRoot":""},"metadata":{},"sourceType":"script"}